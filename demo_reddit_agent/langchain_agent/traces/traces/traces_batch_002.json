{
  "success": true,
  "traces": [
    {
      "trace_id": "1505bfa5-f0e2-4a6e-b33b-958bc84c279a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.132000000",
      "end_time": "2025-09-15 09:59:44.133000000",
      "duration_ms": 0.896,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c110bb45-abc5-409f-80d3-d38ab725a415",
          "trace_id": "1505bfa5-f0e2-4a6e-b33b-958bc84c279a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.132000000",
          "end_time": "2025-09-15 09:59:44.133000000",
          "duration_ms": 0.749,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1177, in _execute_mock_call\n    raise result\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:44.133Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "75ae3f5d-1f71-4ce7-9987-3f4c29cfcd9d",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.128000000",
      "end_time": "2025-09-15 09:59:44.128000000",
      "duration_ms": 0.25,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b0ec6886-58f8-4c02-bd39-84e4953e134a",
          "trace_id": "75ae3f5d-1f71-4ce7-9987-3f4c29cfcd9d",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.128000000",
          "end_time": "2025-09-15 09:59:44.128000000",
          "duration_ms": 0.102,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt3",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "50709d83-e7ce-4b89-a196-8817dc3b8b1f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.127000000",
      "end_time": "2025-09-15 09:59:44.128000000",
      "duration_ms": 0.301,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "288d25be-b053-427f-b9e0-c2158dca56f4",
          "trace_id": "50709d83-e7ce-4b89-a196-8817dc3b8b1f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.128000000",
          "end_time": "2025-09-15 09:59:44.128000000",
          "duration_ms": 0.121,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "3f48289b-b654-43f6-b4d5-1f5bce3b9b10",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.126000000",
      "end_time": "2025-09-15 09:59:44.127000000",
      "duration_ms": 0.502,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "06625e7a-921a-4036-a1fd-dd0ef23b2bf0",
          "trace_id": "3f48289b-b654-43f6-b4d5-1f5bce3b9b10",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.126000000",
          "end_time": "2025-09-15 09:59:44.127000000",
          "duration_ms": 0.215,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "78230d83-411b-4429-8420-9eda659d9d8e",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.112000000",
      "end_time": "2025-09-15 09:59:44.113000000",
      "duration_ms": 0.29300000000000004,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "9dc0c1de-29aa-4936-8387-59483d8475ee",
          "trace_id": "78230d83-411b-4429-8420-9eda659d9d8e",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.112000000",
          "end_time": "2025-09-15 09:59:44.112000000",
          "duration_ms": 0.115,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "2d7122de-7450-4cb4-809d-3f6d1764d5f9",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.111000000",
      "end_time": "2025-09-15 09:59:44.112000000",
      "duration_ms": 0.325,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c0646422-799c-4e4b-9be4-0e663773f9b2",
          "trace_id": "2d7122de-7450-4cb4-809d-3f6d1764d5f9",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.112000000",
          "end_time": "2025-09-15 09:59:44.112000000",
          "duration_ms": 0.131,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "1389cd5e-1af6-4dec-b212-5ded5ad46548",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.108000000",
      "end_time": "2025-09-15 09:59:44.108000000",
      "duration_ms": 0.314,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4e7332a7-810e-449a-8b70-1abb0f05c826",
          "trace_id": "1389cd5e-1af6-4dec-b212-5ded5ad46548",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.108000000",
          "end_time": "2025-09-15 09:59:44.108000000",
          "duration_ms": 0.127,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "98b6d60e-223f-4b40-b7ed-d0bd70f1b0ff",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.105000000",
      "end_time": "2025-09-15 09:59:44.105000000",
      "duration_ms": 0.261,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "84005c68-ae45-4e04-91b6-ea3edeba426b",
          "trace_id": "98b6d60e-223f-4b40-b7ed-d0bd70f1b0ff",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.105000000",
          "end_time": "2025-09-15 09:59:44.105000000",
          "duration_ms": 0.11,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "220558a2-4030-4b6a-989d-570f3ed608ca",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.102000000",
      "end_time": "2025-09-15 09:59:44.102000000",
      "duration_ms": 0.28600000000000003,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "87890f2b-fa02-4c52-af10-89ad43b9edea",
          "trace_id": "220558a2-4030-4b6a-989d-570f3ed608ca",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.102000000",
          "end_time": "2025-09-15 09:59:44.102000000",
          "duration_ms": 0.126,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "ce518bd6-c1c2-4f5e-9760-6ee8dff6bffb",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.099000000",
      "end_time": "2025-09-15 09:59:44.099000000",
      "duration_ms": 0.301,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "7af684dd-03b8-43b3-951e-fb910129fd3e",
          "trace_id": "ce518bd6-c1c2-4f5e-9760-6ee8dff6bffb",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.099000000",
          "end_time": "2025-09-15 09:59:44.099000000",
          "duration_ms": 0.125,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.7,
            "llm.stop_sequences": [
              "<END>"
            ],
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "5caee797-377b-4471-b56a-3878f5595c07",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.096000000",
      "end_time": "2025-09-15 09:59:44.096000000",
      "duration_ms": 0.48899999999999993,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "22b9f89c-261c-4778-88fe-1f9d610f3c93",
          "trace_id": "5caee797-377b-4471-b56a-3878f5595c07",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.096000000",
          "end_time": "2025-09-15 09:59:44.096000000",
          "duration_ms": 0.296,
          "status": "error",
          "status_message": "Either `prompt` or `messages` must be provided.",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "exception.type": "ValueError",
            "exception.message": "Either `prompt` or `messages` must be provided.",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 240, in generate\n    raise ValueError(\"Either `prompt` or `messages` must be provided.\")\nValueError: Either `prompt` or `messages` must be provided.\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Either `prompt` or `messages` must be provided."
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:44.096Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Either `prompt` or `messages` must be provided."
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "5526a7c5-773b-47ef-be20-0a5305670d72",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.092000000",
      "end_time": "2025-09-15 09:59:44.093000000",
      "duration_ms": 0.32699999999999996,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "10cafcf9-b075-494b-bb31-ab46ed82ff0f",
          "trace_id": "5526a7c5-773b-47ef-be20-0a5305670d72",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.093000000",
          "end_time": "2025-09-15 09:59:44.093000000",
          "duration_ms": 0.13699999999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "4a6ad253-2848-4751-8980-72615705de61",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.089000000",
      "end_time": "2025-09-15 09:59:44.089000000",
      "duration_ms": 0.34,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "3775b7de-316d-4655-b7a0-1fe627567275",
          "trace_id": "4a6ad253-2848-4751-8980-72615705de61",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.089000000",
          "end_time": "2025-09-15 09:59:44.089000000",
          "duration_ms": 0.131,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "fae004fe-087a-44a1-941e-063b047d0c33",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.038000000",
      "end_time": "2025-09-15 09:59:44.038000000",
      "duration_ms": 0.20900000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4fa0e275-ed39-4c76-829f-391f5985075b",
          "trace_id": "fae004fe-087a-44a1-941e-063b047d0c33",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.038000000",
          "end_time": "2025-09-15 09:59:44.038000000",
          "duration_ms": 0.049,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "hi",
            "llm.usage.input_tokens": 1,
            "llm.completion": "wrapped",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "d74056e3-025f-4329-b69f-e2d51e667cec",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.034000000",
      "end_time": "2025-09-15 09:59:44.034000000",
      "duration_ms": 0.24600000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a20d42c6-94e4-4b0f-ad65-05d3813845b9",
          "trace_id": "d74056e3-025f-4329-b69f-e2d51e667cec",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.034000000",
          "end_time": "2025-09-15 09:59:44.034000000",
          "duration_ms": 0.055,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "hi",
            "llm.usage.input_tokens": 1,
            "llm.completion": "msg",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "cc35086f-1d07-4f11-9791-842db4feb890",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:43.950000000",
      "end_time": "2025-09-15 09:59:43.950000000",
      "duration_ms": 0.6,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "173ef14a-e1ed-42d3-96a9-0cbabf453284",
          "trace_id": "cc35086f-1d07-4f11-9791-842db4feb890",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:43.950000000",
          "end_time": "2025-09-15 09:59:43.950000000",
          "duration_ms": 0.40900000000000003,
          "status": "error",
          "status_message": "Either `prompt` or `messages` must be provided.",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "exception.type": "ValueError",
            "exception.message": "Either `prompt` or `messages` must be provided.",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/azure_openai.py\", line 169, in generate\n    raise ValueError(\"Either `prompt` or `messages` must be provided.\")\nValueError: Either `prompt` or `messages` must be provided.\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Either `prompt` or `messages` must be provided."
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:43.950Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Either `prompt` or `messages` must be provided."
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "c168485a-6cdb-477d-8616-51adcc644c25",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:43.904000000",
      "end_time": "2025-09-15 09:59:43.904000000",
      "duration_ms": 0.397,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "fa4441c2-1480-4201-8fa3-decb080d6f3b",
          "trace_id": "c168485a-6cdb-477d-8616-51adcc644c25",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:43.904000000",
          "end_time": "2025-09-15 09:59:43.904000000",
          "duration_ms": 0.176,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Prompt as chat",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "99bad20b-c6b9-400b-915e-ca4c16f17ce9",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:43.899000000",
      "end_time": "2025-09-15 09:59:43.899000000",
      "duration_ms": 0.242,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "1e396021-1ecb-49ac-a5f5-dd1cb8c4e130",
          "trace_id": "99bad20b-c6b9-400b-915e-ca4c16f17ce9",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:43.899000000",
          "end_time": "2025-09-15 09:59:43.899000000",
          "duration_ms": 0.057,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "llm.completion": "Delegated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.459000000",
      "updated_at": "2025-09-15 09:59:50.459000000"
    },
    {
      "trace_id": "020c3b2b-dd17-449f-a12d-227ee4919006",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:47.404000000",
      "end_time": "2025-09-15 09:54:49.042000000",
      "duration_ms": 1637.954,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a93313d0-77fe-452e-8065-be007b93f9c6",
          "trace_id": "020c3b2b-dd17-449f-a12d-227ee4919006",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:47.404000000",
          "end_time": "2025-09-15 09:54:49.042000000",
          "duration_ms": 1637.602,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 20,
            "llm.temperature": 0,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "What is the capital of France?",
            "llm.usage.input_tokens": 7,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 214, in generate\n    return self.generate(\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:49.042Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}"
              }
            }
          ],
          "links": []
        },
        {
          "span_id": "f1fc8430-527a-47ee-95f8-e5a6700f0f03",
          "trace_id": "020c3b2b-dd17-449f-a12d-227ee4919006",
          "parent_span_id": "a93313d0-77fe-452e-8065-be007b93f9c6",
          "name": "generate",
          "start_time": "2025-09-15 09:54:48.178000000",
          "end_time": "2025-09-15 09:54:49.042000000",
          "duration_ms": 864.007,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": 0,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "What is the capital of France?",
            "llm.usage.input_tokens": 7,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:49.042Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '11s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:29.184000000",
      "updated_at": "2025-09-15 09:55:29.184000000"
    },
    {
      "trace_id": "b88af492-db26-43d0-ae9c-af29fd85c4a6",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:45.474000000",
      "end_time": "2025-09-15 09:54:46.758000000",
      "duration_ms": 1284.185,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2b97d57e-7dc9-46a3-be4f-5056760f6aa6",
          "trace_id": "b88af492-db26-43d0-ae9c-af29fd85c4a6",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:45.474000000",
          "end_time": "2025-09-15 09:54:46.758000000",
          "duration_ms": 1283.9750000000001,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '13s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 9",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '13s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '13s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '13s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:46.758Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '13s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:29.184000000",
      "updated_at": "2025-09-15 09:55:29.184000000"
    },
    {
      "trace_id": "cbaae1e4-c5cb-4858-8acd-fc97ea8434a6",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:45.157000000",
      "end_time": "2025-09-15 09:54:45.473000000",
      "duration_ms": 315.824,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2d51f859-30f1-47d5-bcda-5d9d04236d06",
          "trace_id": "cbaae1e4-c5cb-4858-8acd-fc97ea8434a6",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:45.158000000",
          "end_time": "2025-09-15 09:54:45.473000000",
          "duration_ms": 315.625,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 8",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:45.473Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "def5dd96-bffa-49c7-97ad-0681ce25f5a5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:43.883000000",
      "end_time": "2025-09-15 09:54:45.157000000",
      "duration_ms": 1273.4160000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "9f5870db-aa15-4f45-9454-3260f827aea7",
          "trace_id": "def5dd96-bffa-49c7-97ad-0681ce25f5a5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:43.883000000",
          "end_time": "2025-09-15 09:54:45.157000000",
          "duration_ms": 1273.241,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 7",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:45.157Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '14s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "98a8efdb-70be-4fba-acc0-f2301b34ee16",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:43.533000000",
      "end_time": "2025-09-15 09:54:43.883000000",
      "duration_ms": 350.19899999999996,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "43bbab9f-cc02-4631-9e4b-fbe911b6c09b",
          "trace_id": "98a8efdb-70be-4fba-acc0-f2301b34ee16",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:43.533000000",
          "end_time": "2025-09-15 09:54:43.883000000",
          "duration_ms": 350.045,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 6",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:43.883Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "6e3a1e8f-2322-4ce6-b20f-0bce07981232",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:42.246000000",
      "end_time": "2025-09-15 09:54:43.532000000",
      "duration_ms": 1286.271,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "8bf84140-4277-46cd-9755-102c8ba35cb8",
          "trace_id": "6e3a1e8f-2322-4ce6-b20f-0bce07981232",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:42.246000000",
          "end_time": "2025-09-15 09:54:43.532000000",
          "duration_ms": 1286.138,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 5",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:43.532Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "ad2f44c9-f957-41e4-b690-970a549ce453",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:41.923000000",
      "end_time": "2025-09-15 09:54:42.246000000",
      "duration_ms": 322.138,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "fbf4456c-0822-427f-9c9b-f8308388584d",
          "trace_id": "ad2f44c9-f957-41e4-b690-970a549ce453",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:41.924000000",
          "end_time": "2025-09-15 09:54:42.246000000",
          "duration_ms": 321.928,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '17s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 4",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '17s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '17s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '17s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:42.246Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '17s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "d782da63-42bc-4d1f-b195-62137ec32f61",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:40.636000000",
      "end_time": "2025-09-15 09:54:41.923000000",
      "duration_ms": 1287.163,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c66ec429-340a-42b2-be9a-5bb7896092b7",
          "trace_id": "d782da63-42bc-4d1f-b195-62137ec32f61",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:40.636000000",
          "end_time": "2025-09-15 09:54:41.923000000",
          "duration_ms": 1286.982,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '18s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 3",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '18s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '18s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '18s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:41.923Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '18s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "d489a930-36cc-4964-a928-1fe2194d6b11",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:40.317000000",
      "end_time": "2025-09-15 09:54:40.635000000",
      "duration_ms": 317.808,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "81626b54-260a-4667-b7c5-ea5f83b1061b",
          "trace_id": "d489a930-36cc-4964-a928-1fe2194d6b11",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:40.317000000",
          "end_time": "2025-09-15 09:54:40.635000000",
          "duration_ms": 317.634,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '19s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 2",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '19s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '19s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '19s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:40.635Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '19s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "036f85fc-9c4f-4347-8732-8477a8596d52",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:38.611000000",
      "end_time": "2025-09-15 09:54:40.317000000",
      "duration_ms": 1705.309,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "57400205-91cd-4637-85c1-4ea643fc21e8",
          "trace_id": "036f85fc-9c4f-4347-8732-8477a8596d52",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:38.612000000",
          "end_time": "2025-09-15 09:54:40.317000000",
          "duration_ms": 1705.177,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 1",
            "llm.usage.input_tokens": 3,
            "llm.completion": "Test prompt 1 received. How can I help you?",
            "llm.usage.output_tokens": 10,
            "llm.usage.total_tokens": 13
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:24.804000000",
      "updated_at": "2025-09-15 09:55:24.804000000"
    },
    {
      "trace_id": "598749d2-fca8-4356-a08b-d155678e1b9d",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:37.604000000",
      "end_time": "2025-09-15 09:54:38.611000000",
      "duration_ms": 1007.0699999999999,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "83b13b6a-5e71-4f57-aaec-b3b02610c026",
          "trace_id": "598749d2-fca8-4356-a08b-d155678e1b9d",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:37.604000000",
          "end_time": "2025-09-15 09:54:38.611000000",
          "duration_ms": 1006.77,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 0",
            "llm.usage.input_tokens": 3,
            "llm.completion": "Okay, I'm here. How can I help you today?",
            "llm.usage.output_tokens": 10,
            "llm.usage.total_tokens": 13
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:43.680000000",
      "updated_at": "2025-09-15 09:54:43.680000000"
    },
    {
      "trace_id": "59343fa5-5724-4e4c-a5e1-279d8bcbc709",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:37.124000000",
      "end_time": "2025-09-15 09:54:37.495000000",
      "duration_ms": 371.637,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "92bedc34-32e0-4edf-bfde-c3a4b422583a",
          "trace_id": "59343fa5-5724-4e4c-a5e1-279d8bcbc709",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:37.124000000",
          "end_time": "2025-09-15 09:54:37.495000000",
          "duration_ms": 371.498,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 4",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:37.495Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:43.680000000",
      "updated_at": "2025-09-15 09:54:43.680000000"
    },
    {
      "trace_id": "5c752af3-74e5-48c3-a2db-7104200b7700",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:35.892000000",
      "end_time": "2025-09-15 09:54:37.123000000",
      "duration_ms": 1231.4830000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5023b7a3-6fb0-43e7-a2a2-6c1efe056d20",
          "trace_id": "5c752af3-74e5-48c3-a2db-7104200b7700",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:35.892000000",
          "end_time": "2025-09-15 09:54:37.123000000",
          "duration_ms": 1231.3449999999998,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 3",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:37.123Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.5-flash'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '22s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:43.680000000",
      "updated_at": "2025-09-15 09:54:43.680000000"
    },
    {
      "trace_id": "1d923423-1db1-4857-8afe-038370c9b7a9",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:35.526000000",
      "end_time": "2025-09-15 09:54:35.891000000",
      "duration_ms": 365.484,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "6903a7eb-e288-43dc-8b48-9eff082d4311",
          "trace_id": "1d923423-1db1-4857-8afe-038370c9b7a9",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:35.526000000",
          "end_time": "2025-09-15 09:54:35.891000000",
          "duration_ms": 365.34,
          "status": "error",
          "status_message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '24s'}]}}",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 2",
            "llm.usage.input_tokens": 3,
            "exception.type": "ClientError",
            "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '24s'}]}}",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 5898, in generate_content\n    response = self._generate_content(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/models.py\", line 4838, in _generate_content\n    response = self._api_client.request(\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 1067, in request\n    response = self._request(http_request, stream=False)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 958, in _request\n    return self._retry(self._request_once, http_request, stream)  # type: ignore[no-any-return]\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 475, in __call__\n    do = self.iter(retry_state=retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 376, in iter\n    result = action(retry_state)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/shivam/.local/lib/python3.10/site-packages/tenacity/__init__.py\", line 478, in __call__\n    result = fn(*args, **kwargs)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/_api_client.py\", line 948, in _request_once\n    errors.APIError.raise_for_response(response)\n  File \"/home/shivam/.local/lib/python3.10/site-packages/google/genai/errors.py\", line 104, in raise_for_response\n    raise ClientError(status_code, response_json, response)\ngoogle.genai.errors.ClientError: 429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '24s'}]}}\n",
            "llm.error.type": "ClientError",
            "llm.error.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '24s'}]}}"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:54:35.891Z",
              "attributes": {
                "exception.type": "ClientError",
                "exception.message": "429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'model': 'gemini-2.5-flash', 'location': 'global'}, 'quotaValue': '10'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '24s'}]}}"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:43.680000000",
      "updated_at": "2025-09-15 09:54:43.680000000"
    },
    {
      "trace_id": "05e5e865-2363-418a-9a57-cad675f42222",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:34.256000000",
      "end_time": "2025-09-15 09:54:35.525000000",
      "duration_ms": 1268.9850000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "cf4baf63-a6f1-4672-9d8e-fb1c42f754cd",
          "trace_id": "05e5e865-2363-418a-9a57-cad675f42222",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:34.257000000",
          "end_time": "2025-09-15 09:54:35.525000000",
          "duration_ms": 1268.857,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 1",
            "llm.usage.input_tokens": 3,
            "llm.completion": "Acknowledged. How can I help you today?",
            "llm.usage.output_tokens": 9,
            "llm.usage.total_tokens": 12
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:43.680000000",
      "updated_at": "2025-09-15 09:54:43.680000000"
    },
    {
      "trace_id": "8b8db03b-cb37-4015-8461-f54071e865ae",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:31.416000000",
      "end_time": "2025-09-15 09:54:34.256000000",
      "duration_ms": 2839.962,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "6df14d12-9d8b-453b-8f51-bf811c30244f",
          "trace_id": "8b8db03b-cb37-4015-8461-f54071e865ae",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:31.416000000",
          "end_time": "2025-09-15 09:54:34.256000000",
          "duration_ms": 2839.8089999999997,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt 0",
            "llm.usage.input_tokens": 3,
            "llm.completion": "This is a test prompt. How can I help you today?",
            "llm.usage.output_tokens": 12,
            "llm.usage.total_tokens": 15
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:38.155000000",
      "updated_at": "2025-09-15 09:54:38.155000000"
    },
    {
      "trace_id": "1016bd1d-670b-4394-920d-06806de12431",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:28.358000000",
      "end_time": "2025-09-15 09:54:31.333000000",
      "duration_ms": 2975.118,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "eb95424f-8774-4214-951b-e03d08bb058c",
          "trace_id": "1016bd1d-670b-4394-920d-06806de12431",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:28.358000000",
          "end_time": "2025-09-15 09:54:31.333000000",
          "duration_ms": 2974.824,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts
            "llm.usage.input_tokens": 3333,
            "llm.completion": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "llm.usage.output_tokens": 16,
            "llm.usage.total_tokens": 3349
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "12607837-dbad-49c6-8fc5-7a4bc4fd9ee8",
          "trace_id": "1016bd1d-670b-4394-920d-06806de12431",
          "parent_span_id": "eb95424f-8774-4214-951b-e03d08bb058c",
          "name": "generate",
          "start_time": "2025-09-15 09:54:29.202000000",
          "end_time": "2025-09-15 09:54:31.333000000",
          "duration_ms": 2130.58,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts
            "llm.usage.input_tokens": 3333,
            "llm.completion": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "llm.usage.output_tokens": 16,
            "llm.usage.total_tokens": 3349
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:38.155000000",
      "updated_at": "2025-09-15 09:54:38.155000000"
    },
    {
      "trace_id": "c560a720-027b-4942-b0ac-8186daa2bea6",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:24.374000000",
      "end_time": "2025-09-15 09:54:28.176000000",
      "duration_ms": 3802.1929999999998,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "1ca9ce97-2f4c-454c-90bd-14be107ee521",
          "trace_id": "c560a720-027b-4942-b0ac-8186daa2bea6",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:24.374000000",
          "end_time": "2025-09-15 09:54:28.176000000",
          "duration_ms": 3801.998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 20,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "What is the capital of France?",
            "llm.usage.input_tokens": 7,
            "llm.completion": "The capital of France is **Paris**.",
            "llm.usage.output_tokens": 8,
            "llm.usage.total_tokens": 15
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "8c20c9ac-a425-4e48-b295-78b81fac0a63",
          "trace_id": "c560a720-027b-4942-b0ac-8186daa2bea6",
          "parent_span_id": "1ca9ce97-2f4c-454c-90bd-14be107ee521",
          "name": "generate",
          "start_time": "2025-09-15 09:54:26.587000000",
          "end_time": "2025-09-15 09:54:28.176000000",
          "duration_ms": 1589.391,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "What is the capital of France?",
            "llm.usage.input_tokens": 7,
            "llm.completion": "The capital of France is **Paris**.",
            "llm.usage.output_tokens": 8,
            "llm.usage.total_tokens": 15
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:07.944000000",
      "updated_at": "2025-09-15 09:55:07.944000000"
    },
    {
      "trace_id": "bc906a55-37c9-41ae-9cd4-d784dc01d8be",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:22.051000000",
      "end_time": "2025-09-15 09:54:24.192000000",
      "duration_ms": 2140.971,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0867fdd9-6238-4f57-bb78-81e1a0664858",
          "trace_id": "bc906a55-37c9-41ae-9cd4-d784dc01d8be",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:22.051000000",
          "end_time": "2025-09-15 09:54:24.192000000",
          "duration_ms": 2140.782,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "What is the capital of France?",
            "llm.usage.input_tokens": 7,
            "llm.completion": "The capital of France is **Paris**.",
            "llm.usage.output_tokens": 8,
            "llm.usage.total_tokens": 15
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:03.176000000",
      "updated_at": "2025-09-15 09:55:03.176000000"
    },
    {
      "trace_id": "1f7cc9b2-9e99-40b2-a394-08b4cc07db44",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:19.172000000",
      "end_time": "2025-09-15 09:54:21.954000000",
      "duration_ms": 2781.446,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "ed3d461d-c0e6-49fe-b099-6b9bd6d81f4e",
          "trace_id": "1f7cc9b2-9e99-40b2-a394-08b4cc07db44",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:19.172000000",
          "end_time": "2025-09-15 09:54:21.954000000",
          "duration_ms": 2781.222,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 20,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Hello",
            "llm.usage.input_tokens": 1,
            "llm.completion": "Hello! How can I help you today?",
            "llm.usage.output_tokens": 8,
            "llm.usage.total_tokens": 9
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "b1c2e84f-954f-41d8-b8df-64d4ea3a85be",
          "trace_id": "1f7cc9b2-9e99-40b2-a394-08b4cc07db44",
          "parent_span_id": "ed3d461d-c0e6-49fe-b099-6b9bd6d81f4e",
          "name": "generate",
          "start_time": "2025-09-15 09:54:20.950000000",
          "end_time": "2025-09-15 09:54:21.954000000",
          "duration_ms": 1003.588,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Hello",
            "llm.usage.input_tokens": 1,
            "llm.completion": "Hello! How can I help you today?",
            "llm.usage.output_tokens": 8,
            "llm.usage.total_tokens": 9
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:55:03.176000000",
      "updated_at": "2025-09-15 09:55:03.176000000"
    },
    {
      "trace_id": "9d80112a-12fc-448b-ac62-2c14c5d4ba51",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:54:15.573000000",
      "end_time": "2025-09-15 09:54:16.357000000",
      "duration_ms": 783.659,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "48b7d239-9bf2-4ace-8024-f59dbe10da95",
          "trace_id": "9d80112a-12fc-448b-ac62-2c14c5d4ba51",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:54:15.573000000",
          "end_time": "2025-09-15 09:54:16.357000000",
          "duration_ms": 783.476,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "What is 2+2?",
            "llm.usage.input_tokens": 3,
            "llm.completion": "2 + 2 = 4",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:57.626000000",
      "updated_at": "2025-09-15 09:54:57.626000000"
    },
    {
      "trace_id": "4fec7437-744d-4303-8599-c919388cce8f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:53:50.276000000",
      "end_time": "2025-09-15 09:53:52.520000000",
      "duration_ms": 2243.952,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "d10f6e28-8180-463f-8adf-154e8762deb0",
          "trace_id": "4fec7437-744d-4303-8599-c919388cce8f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:53:50.276000000",
          "end_time": "2025-09-15 09:53:52.520000000",
          "duration_ms": 2243.706,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts
            "llm.usage.input_tokens": 3333,
            "llm.completion": "The text you provided is just a very long string",
            "llm.usage.output_tokens": 12,
            "llm.usage.total_tokens": 3345
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:32.984000000",
      "updated_at": "2025-09-15 09:54:32.984000000"
    },
    {
      "trace_id": "91ee03b2-2f5b-4429-9d79-c7f8d594416c",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:53:16.130000000",
      "end_time": "2025-09-15 09:53:20.039000000",
      "duration_ms": 3908.802,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e2e9750d-5e3b-4b65-a94a-76598b0701c1",
          "trace_id": "91ee03b2-2f5b-4429-9d79-c7f8d594416c",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:53:16.130000000",
          "end_time": "2025-09-15 09:53:20.039000000",
          "duration_ms": 3908.573,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts
            "llm.usage.input_tokens": 3333
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "059e75b3-f007-435c-ba7a-c4575058d0d5",
          "trace_id": "91ee03b2-2f5b-4429-9d79-c7f8d594416c",
          "parent_span_id": "e2e9750d-5e3b-4b65-a94a-76598b0701c1",
          "name": "generate",
          "start_time": "2025-09-15 09:53:18.748000000",
          "end_time": "2025-09-15 09:53:20.039000000",
          "duration_ms": 1290.64,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts
            "llm.usage.input_tokens": 3333
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:54:00.805000000",
      "updated_at": "2025-09-15 09:54:00.805000000"
    },
    {
      "trace_id": "d58d3257-8edd-42a2-9d15-4c64a949538f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.389000000",
      "end_time": "2025-09-15 07:30:12.389000000",
      "duration_ms": 0.429,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2cf5f73d-4a18-4c85-87f9-d6b304677ad5",
          "trace_id": "d58d3257-8edd-42a2-9d15-4c64a949538f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.389000000",
          "end_time": "2025-09-15 07:30:12.389000000",
          "duration_ms": 0.322,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 122, in generate\n    response = self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.389Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "b087ffc3-fefd-467a-9214-a0bd42aab0e5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.389000000",
      "end_time": "2025-09-15 07:30:12.390000000",
      "duration_ms": 0.313,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "72f2f3ef-2388-41c7-8026-fa5ad0344b2d",
          "trace_id": "b087ffc3-fefd-467a-9214-a0bd42aab0e5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.389000000",
          "end_time": "2025-09-15 07:30:12.390000000",
          "duration_ms": 0.224,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 122, in generate\n    response = self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 174, in generate_batch\n    result = self.generate(\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 122, in generate\n    response = self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.390Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "ce848ebb-f2f8-4a8e-a9b2-5b867ea7274d",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.386000000",
      "end_time": "2025-09-15 07:30:12.386000000",
      "duration_ms": 0.193,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2de87e8b-6d92-41f7-8e4a-bf7c31037734",
          "trace_id": "ce848ebb-f2f8-4a8e-a9b2-5b867ea7274d",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.386000000",
          "end_time": "2025-09-15 07:30:12.386000000",
          "duration_ms": 0.082,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Prompt 3",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "1ab48cb3-460d-46cf-b56f-ac03f3d8a5b3",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.385000000",
      "end_time": "2025-09-15 07:30:12.385000000",
      "duration_ms": 0.205,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "092bd8f5-b255-48b9-a432-baa4df599b08",
          "trace_id": "1ab48cb3-460d-46cf-b56f-ac03f3d8a5b3",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.385000000",
          "end_time": "2025-09-15 07:30:12.385000000",
          "duration_ms": 0.08399999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Prompt 2",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "b327fa32-2bc7-444a-82ac-1d7ec2a9d63f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.385000000",
      "end_time": "2025-09-15 07:30:12.385000000",
      "duration_ms": 0.193,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "8bee06fb-dc12-421e-b8f3-f1944346ddd9",
          "trace_id": "b327fa32-2bc7-444a-82ac-1d7ec2a9d63f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.385000000",
          "end_time": "2025-09-15 07:30:12.385000000",
          "duration_ms": 0.06499999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Prompt 1",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "2b01a102-5581-41e2-8321-2681ed684a22",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.380000000",
      "end_time": "2025-09-15 07:30:12.381000000",
      "duration_ms": 0.955,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "d864f5f7-1c03-4190-a73f-940d13ee8586",
          "trace_id": "2b01a102-5581-41e2-8321-2681ed684a22",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.381000000",
          "end_time": "2025-09-15 07:30:12.381000000",
          "duration_ms": 0.744,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 122, in generate\n    response = self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.381Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "29b2a81f-bb7f-4900-830b-34b85dc190ee",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.376000000",
      "end_time": "2025-09-15 07:30:12.377000000",
      "duration_ms": 0.163,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4efda41d-f96b-4e4f-aa95-4f95b18b6263",
          "trace_id": "29b2a81f-bb7f-4900-830b-34b85dc190ee",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.377000000",
          "end_time": "2025-09-15 07:30:12.377000000",
          "duration_ms": 0.061,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.5,
            "llm.stop_sequences": [
              "<END>"
            ],
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "444f25f7-5aab-4d58-8dc8-2a68e6e30187",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.375000000",
      "end_time": "2025-09-15 07:30:12.375000000",
      "duration_ms": 0.196,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "da34e486-fdb2-45c3-8680-275a43c25823",
          "trace_id": "444f25f7-5aab-4d58-8dc8-2a68e6e30187",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.375000000",
          "end_time": "2025-09-15 07:30:12.375000000",
          "duration_ms": 0.067,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "89e5b8bc-f3ee-40b7-9cd9-f2820f027ebb",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.352000000",
      "end_time": "2025-09-15 07:30:12.353000000",
      "duration_ms": 0.19699999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "d2a3dfc3-8f4a-4b1b-9322-d4ef1cb75758",
          "trace_id": "89e5b8bc-f3ee-40b7-9cd9-f2820f027ebb",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.352000000",
          "end_time": "2025-09-15 07:30:12.353000000",
          "duration_ms": 0.079,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.7,
            "llm.stop_sequences": null,
            "llm.top_p": 0.9,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "a4c7d799-e2fd-4fbe-a772-b1fc1dc68454",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.349000000",
      "end_time": "2025-09-15 07:30:12.349000000",
      "duration_ms": 0.22,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a10b9334-de04-4ffc-922e-0b562c48c452",
          "trace_id": "a4c7d799-e2fd-4fbe-a772-b1fc1dc68454",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.349000000",
          "end_time": "2025-09-15 07:30:12.349000000",
          "duration_ms": 0.074,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "0aebc7af-da78-4320-b227-8b5e716c4ab0",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.333000000",
      "end_time": "2025-09-15 07:30:12.334000000",
      "duration_ms": 0.192,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "502b49a1-a478-4d49-855e-3e11c1fa70a2",
          "trace_id": "0aebc7af-da78-4320-b227-8b5e716c4ab0",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.334000000",
          "end_time": "2025-09-15 07:30:12.334000000",
          "duration_ms": 0.07200000000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "complete response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "5298699d-903b-4423-9c13-ec12d491c888",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.330000000",
      "end_time": "2025-09-15 07:30:12.330000000",
      "duration_ms": 0.24600000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "58930926-0daa-467b-9e47-fcb41f9ef9b9",
          "trace_id": "5298699d-903b-4423-9c13-ec12d491c888",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.330000000",
          "end_time": "2025-09-15 07:30:12.330000000",
          "duration_ms": 0.089,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "ed81b014-e515-4056-b6c3-d1e27187fb22",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.327000000",
      "end_time": "2025-09-15 07:30:12.327000000",
      "duration_ms": 0.163,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2f8df1e7-a2bd-4d10-8de2-4a59119822cb",
          "trace_id": "ed81b014-e515-4056-b6c3-d1e27187fb22",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.327000000",
          "end_time": "2025-09-15 07:30:12.327000000",
          "duration_ms": 0.067,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "e27a4d5f-cc48-4358-9d40-1ec8f4cf0a03",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.325000000",
      "end_time": "2025-09-15 07:30:12.325000000",
      "duration_ms": 0.465,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5741ab22-259c-48d5-8e9b-3c93b819e6bd",
          "trace_id": "e27a4d5f-cc48-4358-9d40-1ec8f4cf0a03",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.325000000",
          "end_time": "2025-09-15 07:30:12.325000000",
          "duration_ms": 0.371,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "ca6cf98f-6ce6-4b91-9661-cd12d0def5f3",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.320000000",
      "end_time": "2025-09-15 07:30:12.320000000",
      "duration_ms": 0.179,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "8eaef9dd-ce40-4690-8297-af34d1b42d07",
          "trace_id": "ca6cf98f-6ce6-4b91-9661-cd12d0def5f3",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.320000000",
          "end_time": "2025-09-15 07:30:12.320000000",
          "duration_ms": 0.06499999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.top_p": 0.9,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "f99b2b01-c4cd-4e50-9d3f-fe8db92f32ea",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.317000000",
      "end_time": "2025-09-15 07:30:12.318000000",
      "duration_ms": 0.505,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0afdfea0-b624-4c80-b6f9-3b011aa80c5d",
          "trace_id": "f99b2b01-c4cd-4e50-9d3f-fe8db92f32ea",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.317000000",
          "end_time": "2025-09-15 07:30:12.318000000",
          "duration_ms": 0.406,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "48316604-55ef-4eed-acb4-e89874c34d11",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.315000000",
      "end_time": "2025-09-15 07:30:12.315000000",
      "duration_ms": 0.162,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b5f22521-4b2a-44ff-9fbe-11786796d413",
          "trace_id": "48316604-55ef-4eed-acb4-e89874c34d11",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.315000000",
          "end_time": "2025-09-15 07:30:12.315000000",
          "duration_ms": 0.063,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "mapping content",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "0ac140c5-c74e-4fc9-a36b-bd992fea00aa",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.314000000",
      "end_time": "2025-09-15 07:30:12.315000000",
      "duration_ms": 0.316,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "7d92c202-b25c-4108-95e3-94240011c638",
          "trace_id": "0ac140c5-c74e-4fc9-a36b-bd992fea00aa",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.315000000",
          "end_time": "2025-09-15 07:30:12.315000000",
          "duration_ms": 0.122,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "attribute content",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "7e18c681-b112-475c-afc0-c33c3fbbb8d7",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.310000000",
      "end_time": "2025-09-15 07:30:12.311000000",
      "duration_ms": 0.627,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c3fc0746-e0d5-4e41-bfd2-21a3c21fc9a0",
          "trace_id": "7e18c681-b112-475c-afc0-c33c3fbbb8d7",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.310000000",
          "end_time": "2025-09-15 07:30:12.311000000",
          "duration_ms": 0.49799999999999994,
          "status": "error",
          "status_message": "Batch Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "Batch Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 430, in generate_batch\n    text = self.generate(\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: Batch Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "Batch Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.311Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "Batch Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "4e480f91-9702-4ba7-a18b-13709aa2ad0d",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.309000000",
      "end_time": "2025-09-15 07:30:12.310000000",
      "duration_ms": 0.33799999999999997,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "d035b6c1-295a-4c2f-8035-3ca737856ac6",
          "trace_id": "4e480f91-9702-4ba7-a18b-13709aa2ad0d",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.309000000",
          "end_time": "2025-09-15 07:30:12.310000000",
          "duration_ms": 0.231,
          "status": "error",
          "status_message": "Batch Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "Batch Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: Batch Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "Batch Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.310Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "Batch Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "28b910a4-354d-49f7-b6c3-38e6d1d15e4c",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.305000000",
      "end_time": "2025-09-15 07:30:12.305000000",
      "duration_ms": 0.40700000000000003,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a4d95aa6-d89d-471b-935c-14391cc77038",
          "trace_id": "28b910a4-354d-49f7-b6c3-38e6d1d15e4c",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.305000000",
          "end_time": "2025-09-15 07:30:12.305000000",
          "duration_ms": 0.27099999999999996,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.305Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "8495970e-a546-4d72-bc9f-01c0d8164deb",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.289000000",
      "end_time": "2025-09-15 07:30:12.289000000",
      "duration_ms": 0.135,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4cfe965a-0b7b-44ab-a297-56cd0df80ccc",
          "trace_id": "8495970e-a546-4d72-bc9f-01c0d8164deb",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.289000000",
          "end_time": "2025-09-15 07:30:12.289000000",
          "duration_ms": 0.056,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt3",
            "llm.usage.input_tokens": 1,
            "llm.completion": "success2",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "534d8c27-5767-4ae7-8330-0c1b90484f2a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.288000000",
      "end_time": "2025-09-15 07:30:12.288000000",
      "duration_ms": 0.373,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "82f9520f-fb28-49c5-ae1d-889d38d648b8",
          "trace_id": "534d8c27-5767-4ae7-8330-0c1b90484f2a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.288000000",
          "end_time": "2025-09-15 07:30:12.288000000",
          "duration_ms": 0.294,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1177, in _execute_mock_call\n    raise result\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.288Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "3df1abf8-e816-4299-8a71-7e0e4cf261e0",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.288000000",
      "end_time": "2025-09-15 07:30:12.288000000",
      "duration_ms": 0.14400000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b192d061-40ed-493e-862d-4c59229f9a36",
          "trace_id": "3df1abf8-e816-4299-8a71-7e0e4cf261e0",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.288000000",
          "end_time": "2025-09-15 07:30:12.288000000",
          "duration_ms": 0.059,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "llm.completion": "success",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "4dbb9e0b-6242-4a4f-a22e-e9bc4bef5543",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.286000000",
      "end_time": "2025-09-15 07:30:12.286000000",
      "duration_ms": 0.118,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "7fa460f3-506f-48ef-a6e8-17aef59a82f0",
          "trace_id": "4dbb9e0b-6242-4a4f-a22e-e9bc4bef5543",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.286000000",
          "end_time": "2025-09-15 07:30:12.286000000",
          "duration_ms": 0.048,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt3",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "9c1236bf-3f11-4344-9932-c4e1649b8840",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.285000000",
      "end_time": "2025-09-15 07:30:12.286000000",
      "duration_ms": 0.128,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a51d8fdf-9d2a-4c0c-bb67-71c16d35f502",
          "trace_id": "9c1236bf-3f11-4344-9932-c4e1649b8840",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.286000000",
          "end_time": "2025-09-15 07:30:12.286000000",
          "duration_ms": 0.052,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "004a18ff-41d4-4843-9332-57214f58d63a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.285000000",
      "end_time": "2025-09-15 07:30:12.285000000",
      "duration_ms": 0.196,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "ac02a3f8-458d-47a5-bb27-21f92aeb3084",
          "trace_id": "004a18ff-41d4-4843-9332-57214f58d63a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.285000000",
          "end_time": "2025-09-15 07:30:12.285000000",
          "duration_ms": 0.064,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "e2eb3cb9-4e2d-4bc7-946a-c02181545e3a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.275000000",
      "end_time": "2025-09-15 07:30:12.275000000",
      "duration_ms": 0.128,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e16a4d61-225f-4a2f-a5fd-d553ef354b5b",
          "trace_id": "e2eb3cb9-4e2d-4bc7-946a-c02181545e3a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.275000000",
          "end_time": "2025-09-15 07:30:12.275000000",
          "duration_ms": 0.052,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "19185d81-b01a-482a-9d84-d8c5a627e4e0",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.274000000",
      "end_time": "2025-09-15 07:30:12.274000000",
      "duration_ms": 0.13799999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5cf1eb92-c201-4d14-ae81-ef01f7412cf0",
          "trace_id": "19185d81-b01a-482a-9d84-d8c5a627e4e0",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.274000000",
          "end_time": "2025-09-15 07:30:12.274000000",
          "duration_ms": 0.055,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "aa679a50-c584-4383-8cb5-153d3731620a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.273000000",
      "end_time": "2025-09-15 07:30:12.273000000",
      "duration_ms": 0.13699999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4057221e-0410-43be-87c2-a6b16ec4133e",
          "trace_id": "aa679a50-c584-4383-8cb5-153d3731620a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.273000000",
          "end_time": "2025-09-15 07:30:12.273000000",
          "duration_ms": 0.056,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "d49b612c-24f9-4485-a21b-7a37fedad188",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.271000000",
      "end_time": "2025-09-15 07:30:12.271000000",
      "duration_ms": 0.154,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "da9e9776-1e70-48dc-823b-055541a41876",
          "trace_id": "d49b612c-24f9-4485-a21b-7a37fedad188",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.271000000",
          "end_time": "2025-09-15 07:30:12.271000000",
          "duration_ms": 0.068,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.383000000",
      "updated_at": "2025-09-15 07:30:57.383000000"
    },
    {
      "trace_id": "120f566e-aa9f-41b7-8c74-bc3e0fef47b7",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.269000000",
      "end_time": "2025-09-15 07:30:12.270000000",
      "duration_ms": 0.208,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "308ad27f-10b5-4c3c-b7c3-1d00335b4f0a",
          "trace_id": "120f566e-aa9f-41b7-8c74-bc3e0fef47b7",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.270000000",
          "end_time": "2025-09-15 07:30:12.270000000",
          "duration_ms": 0.077,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "528a762d-2440-421e-8fd5-8b5e41a3d72a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.267000000",
      "end_time": "2025-09-15 07:30:12.267000000",
      "duration_ms": 0.261,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "aeadbe4a-3da1-4d2b-88f0-25188fe1f1a0",
          "trace_id": "528a762d-2440-421e-8fd5-8b5e41a3d72a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.267000000",
          "end_time": "2025-09-15 07:30:12.267000000",
          "duration_ms": 0.1,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.7,
            "llm.stop_sequences": [
              "<END>"
            ],
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "b3b3ffee-30ba-434c-919a-2e41eeab2783",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.265000000",
      "end_time": "2025-09-15 07:30:12.265000000",
      "duration_ms": 0.437,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "073d273b-bb94-4a23-ac01-67fa3b44a6b5",
          "trace_id": "b3b3ffee-30ba-434c-919a-2e41eeab2783",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.265000000",
          "end_time": "2025-09-15 07:30:12.265000000",
          "duration_ms": 0.265,
          "status": "error",
          "status_message": "Either `prompt` or `messages` must be provided.",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "exception.type": "ValueError",
            "exception.message": "Either `prompt` or `messages` must be provided.",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 240, in generate\n    raise ValueError(\"Either `prompt` or `messages` must be provided.\")\nValueError: Either `prompt` or `messages` must be provided.\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Either `prompt` or `messages` must be provided."
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.265Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Either `prompt` or `messages` must be provided."
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "f1ae8e60-449d-4946-bd86-b26b8b296ecf",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.261000000",
      "end_time": "2025-09-15 07:30:12.261000000",
      "duration_ms": 0.372,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e4ab7d13-ef99-4da2-af52-2205e915f75d",
          "trace_id": "f1ae8e60-449d-4946-bd86-b26b8b296ecf",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.261000000",
          "end_time": "2025-09-15 07:30:12.261000000",
          "duration_ms": 0.14200000000000002,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "24beffaa-174f-4dc9-80a0-80dd5fc9fd39",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.258000000",
      "end_time": "2025-09-15 07:30:12.259000000",
      "duration_ms": 0.213,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e563ac73-c93c-4176-81bf-d6bd20075ed9",
          "trace_id": "24beffaa-174f-4dc9-80a0-80dd5fc9fd39",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.258000000",
          "end_time": "2025-09-15 07:30:12.259000000",
          "duration_ms": 0.08,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "0803fd0e-d8e7-440f-b401-7cd726d13097",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.229000000",
      "end_time": "2025-09-15 07:30:12.229000000",
      "duration_ms": 0.347,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "6465b16e-517f-4e95-be09-e509e6645a26",
          "trace_id": "0803fd0e-d8e7-440f-b401-7cd726d13097",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.229000000",
          "end_time": "2025-09-15 07:30:12.229000000",
          "duration_ms": 0.149,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "part text",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "ef0a490e-58ca-461c-8280-ce2c7ce4b041",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.226000000",
      "end_time": "2025-09-15 07:30:12.226000000",
      "duration_ms": 0.14100000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "cb12f5d2-9fe5-4899-8a04-ff4b4794e651",
          "trace_id": "ef0a490e-58ca-461c-8280-ce2c7ce4b041",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.226000000",
          "end_time": "2025-09-15 07:30:12.226000000",
          "duration_ms": 0.061,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "fa5f18c7-6971-47d1-8c6d-ce27e0b8e4ac",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.224000000",
      "end_time": "2025-09-15 07:30:12.224000000",
      "duration_ms": 0.15100000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "6be5a2fa-5344-4843-93d2-e5144c877611",
          "trace_id": "fa5f18c7-6971-47d1-8c6d-ce27e0b8e4ac",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.224000000",
          "end_time": "2025-09-15 07:30:12.224000000",
          "duration_ms": 0.067,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "52bfe69c-3d63-47de-8319-37d4d56fb8ee",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.221000000",
      "end_time": "2025-09-15 07:30:12.221000000",
      "duration_ms": 0.205,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "12e209c4-103a-4dd4-87b2-f4e31d9579d8",
          "trace_id": "52bfe69c-3d63-47de-8319-37d4d56fb8ee",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.221000000",
          "end_time": "2025-09-15 07:30:12.221000000",
          "duration_ms": 0.083,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "fallback output",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "758456ba-0977-4ff3-88b3-3b93e1098727",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.212000000",
      "end_time": "2025-09-15 07:30:12.212000000",
      "duration_ms": 0.39399999999999996,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5a8003ae-2bda-4d55-8826-9100a4b5fda2",
          "trace_id": "758456ba-0977-4ff3-88b3-3b93e1098727",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.212000000",
          "end_time": "2025-09-15 07:30:12.212000000",
          "duration_ms": 0.19,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": [
              "<END>"
            ],
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "03f8c701-2395-4ed4-82e0-de8be8e00a12",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.191000000",
      "end_time": "2025-09-15 07:30:12.191000000",
      "duration_ms": 0.27999999999999997,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "7f8e40ae-1487-42f4-b212-1d991bcfeefb",
          "trace_id": "03f8c701-2395-4ed4-82e0-de8be8e00a12",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.191000000",
          "end_time": "2025-09-15 07:30:12.191000000",
          "duration_ms": 0.203,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 265, in generate_batch\n    result = self.generate(\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.191Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "ee5aeb7a-7268-4bde-8176-a8f9300d1fc5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.190000000",
      "end_time": "2025-09-15 07:30:12.191000000",
      "duration_ms": 0.339,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "dbbe81e0-ce20-4613-b06e-142714b696e6",
          "trace_id": "ee5aeb7a-7268-4bde-8176-a8f9300d1fc5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.190000000",
          "end_time": "2025-09-15 07:30:12.191000000",
          "duration_ms": 0.24899999999999997,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.190Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "eb841f77-f34e-4576-8070-bbd188b292f5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.188000000",
      "end_time": "2025-09-15 07:30:12.188000000",
      "duration_ms": 0.155,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "dc4ddc81-4af2-46b6-a66b-0209fd07444e",
          "trace_id": "eb841f77-f34e-4576-8070-bbd188b292f5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.188000000",
          "end_time": "2025-09-15 07:30:12.188000000",
          "duration_ms": 0.068,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Prompt 2",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "b3e16705-7465-43fd-89b8-cac114a06ef5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.188000000",
      "end_time": "2025-09-15 07:30:12.188000000",
      "duration_ms": 0.14100000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e638b4ca-0c00-4772-9646-dcef8b47d9ec",
          "trace_id": "b3e16705-7465-43fd-89b8-cac114a06ef5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.188000000",
          "end_time": "2025-09-15 07:30:12.188000000",
          "duration_ms": 0.059,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Prompt 3",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "016b65e9-73c8-4b56-b469-fcc47eecb115",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.187000000",
      "end_time": "2025-09-15 07:30:12.188000000",
      "duration_ms": 0.36200000000000004,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "8845322b-732a-4ab0-807f-15f0a720a879",
          "trace_id": "016b65e9-73c8-4b56-b469-fcc47eecb115",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.187000000",
          "end_time": "2025-09-15 07:30:12.188000000",
          "duration_ms": 0.237,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Prompt 1",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "5cf95f2b-380c-4906-b770-4a1d06a7f2d7",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.184000000",
      "end_time": "2025-09-15 07:30:12.185000000",
      "duration_ms": 0.696,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4a48e5b0-8774-4528-b162-0cf2d9c1a77f",
          "trace_id": "5cf95f2b-380c-4906-b770-4a1d06a7f2d7",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.184000000",
          "end_time": "2025-09-15 07:30:12.185000000",
          "duration_ms": 0.533,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 189, in generate\n    response = self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.185Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "10d55ab2-073f-41ef-adaf-650c70356433",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.181000000",
      "end_time": "2025-09-15 07:30:12.182000000",
      "duration_ms": 0.397,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "73cedfd9-cac4-48b0-95b5-e9f60e3cbf16",
          "trace_id": "10d55ab2-073f-41ef-adaf-650c70356433",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.181000000",
          "end_time": "2025-09-15 07:30:12.182000000",
          "duration_ms": 0.13699999999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "4eba983f-ec64-4fb5-bb71-7904fe9855d5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.176000000",
      "end_time": "2025-09-15 07:30:12.176000000",
      "duration_ms": 0.27999999999999997,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "6f833ebb-e1ef-4f86-a972-0bfd718bff97",
          "trace_id": "4eba983f-ec64-4fb5-bb71-7904fe9855d5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.176000000",
          "end_time": "2025-09-15 07:30:12.176000000",
          "duration_ms": 0.193,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.5,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "ade1c9e0-8063-4248-9e92-358453d026a2",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.174000000",
      "end_time": "2025-09-15 07:30:12.174000000",
      "duration_ms": 0.339,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "60d129e7-b272-401a-bc79-338d932f03d0",
          "trace_id": "ade1c9e0-8063-4248-9e92-358453d026a2",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.174000000",
          "end_time": "2025-09-15 07:30:12.174000000",
          "duration_ms": 0.205,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "2554167e-9323-4687-aab7-a472f88fd65a",
      "name": "auto_trace_test_func",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.138000000",
      "end_time": "2025-09-15 07:30:12.138000000",
      "duration_ms": 0.11,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "test_func",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "d6945122-38ab-4b29-ac9e-43464a402c39",
          "trace_id": "2554167e-9323-4687-aab7-a472f88fd65a",
          "parent_span_id": "",
          "name": "test_func",
          "start_time": "2025-09-15 07:30:12.138000000",
          "end_time": "2025-09-15 07:30:12.138000000",
          "duration_ms": 0.020999999999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "test_func",
            "function.module": "test_models_base",
            "function.qualname": "TestBaseModel.test_trace_llm_fallback_to_noop.<locals>.test_func",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.completion": "test",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 1
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "fb022f46-bf76-4085-8b65-7dd790af395d",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.109000000",
      "end_time": "2025-09-15 07:30:12.109000000",
      "duration_ms": 0.12999999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4aca472f-829f-4aef-b608-83e0d0f959ad",
          "trace_id": "fb022f46-bf76-4085-8b65-7dd790af395d",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.109000000",
          "end_time": "2025-09-15 07:30:12.109000000",
          "duration_ms": 0.029,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "hi",
            "llm.usage.input_tokens": 1,
            "llm.completion": "wrapped",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "5e7716ea-68a4-4a01-9522-9db0224d8bcd",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.107000000",
      "end_time": "2025-09-15 07:30:12.107000000",
      "duration_ms": 0.152,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "fa62b909-4cbf-44f4-86f0-3edcb317f0c6",
          "trace_id": "5e7716ea-68a4-4a01-9522-9db0224d8bcd",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.107000000",
          "end_time": "2025-09-15 07:30:12.107000000",
          "duration_ms": 0.032,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "hi",
            "llm.usage.input_tokens": 1,
            "llm.completion": "msg",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "5830d12b-1b54-4c4e-8452-c655fe35b166",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.075000000",
      "end_time": "2025-09-15 07:30:12.076000000",
      "duration_ms": 0.377,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "76c3cb65-48ec-4e5a-8665-a9bc29b3f22c",
          "trace_id": "5830d12b-1b54-4c4e-8452-c655fe35b166",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.076000000",
          "end_time": "2025-09-15 07:30:12.076000000",
          "duration_ms": 0.243,
          "status": "error",
          "status_message": "Either `prompt` or `messages` must be provided.",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "exception.type": "ValueError",
            "exception.message": "Either `prompt` or `messages` must be provided.",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/.venv/lib/python3.10/site-packages/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/azure_openai.py\", line 169, in generate\n    raise ValueError(\"Either `prompt` or `messages` must be provided.\")\nValueError: Either `prompt` or `messages` must be provided.\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Either `prompt` or `messages` must be provided."
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T07:30:12.076Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Either `prompt` or `messages` must be provided."
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "a982ec15-e4b1-49a7-a6c0-19ba55ea98b4",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.040000000",
      "end_time": "2025-09-15 07:30:12.040000000",
      "duration_ms": 0.29,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "3cf30e44-ed6e-4393-9ad5-b579fc6ef7a6",
          "trace_id": "a982ec15-e4b1-49a7-a6c0-19ba55ea98b4",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.040000000",
          "end_time": "2025-09-15 07:30:12.040000000",
          "duration_ms": 0.078,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Prompt as chat",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "93245c01-5646-4976-a618-02484949ce06",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.037000000",
      "end_time": "2025-09-15 07:30:12.038000000",
      "duration_ms": 0.158,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4a99ec16-b886-4281-82e8-8bbd64c24c9a",
          "trace_id": "93245c01-5646-4976-a618-02484949ce06",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.038000000",
          "end_time": "2025-09-15 07:30:12.038000000",
          "duration_ms": 0.036000000000000004,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "llm.completion": "Delegated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "9c9f4ed8-37ea-4731-a556-577188566381",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.023000000",
      "end_time": "2025-09-15 07:30:12.023000000",
      "duration_ms": 0.14200000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "239b5fe0-cb98-441a-9c5b-ed45aa928901",
          "trace_id": "9c9f4ed8-37ea-4731-a556-577188566381",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.023000000",
          "end_time": "2025-09-15 07:30:12.023000000",
          "duration_ms": 0.054,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.382000000",
      "updated_at": "2025-09-15 07:30:57.382000000"
    },
    {
      "trace_id": "2690fc2a-c43f-4d62-9cf4-b0052f109955",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.021000000",
      "end_time": "2025-09-15 07:30:12.021000000",
      "duration_ms": 0.27999999999999997,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e5248b79-3525-4161-aab3-c2a6203ce6e9",
          "trace_id": "2690fc2a-c43f-4d62-9cf4-b0052f109955",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.021000000",
          "end_time": "2025-09-15 07:30:12.021000000",
          "duration_ms": 0.18000000000000002,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.381000000",
      "updated_at": "2025-09-15 07:30:57.381000000"
    },
    {
      "trace_id": "d62c4b5f-45b7-4c64-a0a8-a6ded8e076a0",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 07:30:12.018000000",
      "end_time": "2025-09-15 07:30:12.019000000",
      "duration_ms": 0.32,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.5"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.5",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4e728497-70d7-4cb1-91c8-1b9bed63398b",
          "trace_id": "d62c4b5f-45b7-4c64-a0a8-a6ded8e076a0",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 07:30:12.018000000",
          "end_time": "2025-09-15 07:30:12.019000000",
          "duration_ms": 0.193,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 07:30:57.381000000",
      "updated_at": "2025-09-15 07:30:57.381000000"
    }
  ],
  "pagination": {
    "total": 2325,
    "limit": 100,
    "offset": 100,
    "has_more": true
  },
  "timestamp": "2025-09-17T04:13:23.171Z",
  "processing_time_ms": 39
}