{
  "success": true,
  "traces": [
    {
      "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
      "name": "test_research_workflow_anthropic_claude-3-haiku-20240307",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 03:00:20.301000000",
      "end_time": "2025-09-17 03:00:22.065000000",
      "duration_ms": 1764.933,
      "span_count": 8,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "19923a2e-cbbb-4601-9d27-f07da0845836",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "943cb8a3-9f36-48a0-a13b-7ccf2553fcf1",
          "name": "llm_analysis_call",
          "start_time": "2025-09-17 03:00:20.301000000",
          "end_time": "2025-09-17 03:00:21.344000000",
          "duration_ms": 1042.916,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_analysis_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_analysis_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "anthropic",
            "metadata.model": "claude-3-haiku-20240307",
            "metadata.task": "analysis",
            "llm.prompts": "Analyze the following research results about 'artificial intelligence in healthcare':\n\n- Understanding artificial intelligence in healthcare: A Comprehensive Guide: Learn about artificial intelligence in healthcare with detailed explanations and examples...\n- artificial intelligence in healthcare Best Practices and Applications: Discover the best practices and real-world applications of artificial intelligence in healthcare...\n- Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey: This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...\n\nProvide a structured analysis including:\n1. Key findings (2-3 bullet points)\n2. Main themes (2-3 themes)\n3. Confidence assessment (0.0-1.0)\n\nKeep the response concise and factual.",
            "llm.usage.input_tokens": 246,
            "context.agent_id": "analysis_agent",
            "llm.task": "research_analysis",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.prompt_length": 862,
            "llm.usage.total_tokens": 382,
            "llm.response_length": 544,
            "llm.completion": "Certainly! Here's a structured analysis of the provided research results on 'artificial intelligence in healthcare':\n\n1. Key Findings:\n   - Artificial intelligence (AI) has significant potential to transform and enhance healthcare, from disease diagnosis and treatment to drug discovery and patient management.\n   - AI-based applications in healthcare are rapidly advancing, with recent developments in areas such as machine learning, natural language processing, and computer vision.\n   - Successful implementation of AI in healthcare requires",
            "llm.usage.output_tokens": 136
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "ebcaa212-963d-4951-8853-f3e2d2cf0bd9",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "9c1ca968-3acd-4054-a2d2-839d62e9eb14",
          "name": "agent:search_agent:search_agent",
          "start_time": "2025-09-17 03:00:20.301000000",
          "end_time": "2025-09-17 03:00:20.301000000",
          "duration_ms": 0.283,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "search_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.search_agent",
            "function.type": "agent_operation",
            "agent.id": "search_agent",
            "agent.operation": "search_agent",
            "agent.type": "researcher",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "agent.search_topic": "artificial intelligence in healthcare",
            "agent.results_count": 3,
            "agent.sources": "web,academic",
            "agent.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "agent.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "c2af2a11-566d-4229-8c7c-4b63b8959b01",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "ebcaa212-963d-4951-8853-f3e2d2cf0bd9",
          "name": "tool:academic_search:academic_search_tool",
          "start_time": "2025-09-17 03:00:20.301000000",
          "end_time": "2025-09-17 03:00:20.301000000",
          "duration_ms": 0.037,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "academic_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "academic_search",
            "tool.operation": "academic_search_tool",
            "tool.type": "academic_database",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.database": "simulated_arxiv",
            "tool.papers_found": 1,
            "tool.total_citations": 42,
            "tool.output.result": "[{'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "8599c374-840d-47ff-a5ff-4861ff39ebae",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "ebcaa212-963d-4951-8853-f3e2d2cf0bd9",
          "name": "tool:web_search:web_search_tool",
          "start_time": "2025-09-17 03:00:20.301000000",
          "end_time": "2025-09-17 03:00:20.301000000",
          "duration_ms": 0.048,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "web_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "web_search",
            "tool.operation": "web_search_tool",
            "tool.type": "search_engine",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.search_engine": "simulated_google",
            "tool.results_count": 2,
            "tool.avg_relevance": 0.895,
            "tool.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "943cb8a3-9f36-48a0-a13b-7ccf2553fcf1",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "9c1ca968-3acd-4054-a2d2-839d62e9eb14",
          "name": "agent:analysis_agent:analysis_agent",
          "start_time": "2025-09-17 03:00:20.301000000",
          "end_time": "2025-09-17 03:00:21.344000000",
          "duration_ms": 1043.142,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "analysis_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.analysis_agent",
            "function.type": "agent_operation",
            "agent.id": "analysis_agent",
            "agent.operation": "analysis_agent",
            "agent.type": "analyzer",
            "agent.input.search_results": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "analysis_agent",
            "agent.input_sources": 3,
            "analysis.topic": "artificial intelligence in healthcare",
            "agent.analysis_confidence": 0.85,
            "agent.analysis_length": 544,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': \"Certainly! Here's a structured analysis of the provided research results on 'artificial intelligence in healthcare':\\n\\n1. Key Findings:\\n   - Artificial intelligence (AI) has significant potential to transform and enhance healthcare, from disease diagnosis and treatment to drug discovery and patient management.\\n   - AI-based applications in healthcare are rapidly advancing, with recent developments in areas such as machine learning, natural language processing, and computer vision.\\n   - Successful implementation of AI in healthcare requires\", 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T03:00:21Z'}",
            "agent.output.type": "dict",
            "agent.reasoning.confidence": "0.85"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "9c1ca968-3acd-4054-a2d2-839d62e9eb14",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "",
          "name": "agent:research_coordinator:research_coordinator",
          "start_time": "2025-09-17 03:00:20.301000000",
          "end_time": "2025-09-17 03:00:22.065000000",
          "duration_ms": 1764.72,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "research_coordinator",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.research_coordinator",
            "function.type": "agent_operation",
            "agent.id": "research_coordinator",
            "agent.operation": "research_coordinator",
            "agent.type": "coordinator",
            "agent.input.research_topic": "artificial intelligence in healthcare",
            "context.agent_id": "research_coordinator",
            "research.topic": "artificial intelligence in healthcare",
            "agent.workflow": "multi_agent_research",
            "agent.completed_steps": 3,
            "research.result_size": 2229,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'search_results': [{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}], 'analysis': {'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': \"Certainly! Here's a structured analysis of the provided research results on 'artificial intelligence in healthcare':\\n\\n1. Key Findings:\\n   - Artificial intelligence (AI) has significant potential to transform and enhance healthcare, from disease diagnosis and treatment to drug discovery and patient management.\\n   - AI-based applications in healthcare are rapidly advancing, with recent developments in areas such as machine learning, natural language processing, and computer vision.\\n   - Successful implementation of AI in healthcare requires\", 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T03:00:21Z'}, 'summary': 'Executive Summary:\\n\\nArtificial intelligence (AI) is transforming healthcare with applications in disease diagnosis, treatment, drug discovery, and patient management. Recent advancements in machine learning, natural language processing, and computer vision are enabling AI-based healthcare', 'timestamp': '2025-09-17T03:00:22Z', 'coordinator_agent': 'research_coordinator'}",
            "agent.output.type": "dict"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "a1f965d4-b17c-4601-9eeb-15a2846e49a4",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "9c1ca968-3acd-4054-a2d2-839d62e9eb14",
          "name": "agent:summary_agent:summary_agent",
          "start_time": "2025-09-17 03:00:21.344000000",
          "end_time": "2025-09-17 03:00:22.065000000",
          "duration_ms": 720.85,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "summary_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.summary_agent",
            "function.type": "agent_operation",
            "agent.id": "summary_agent",
            "agent.operation": "summary_agent",
            "agent.type": "summarizer",
            "agent.input.analysis": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': \"Certainly! Here's a structured analysis of the provided research results on 'artificial intelligence in healthcare':\\n\\n1. Key Findings:\\n   - Artificial intelligence (AI) has significant potential to transform and enhance healthcare, from disease diagnosis and treatment to drug discovery and patient management.\\n   - AI-based applications in healthcare are rapidly advancing, with recent developments in areas such as machine learning, natural language processing, and computer vision.\\n   - Successful implementation of AI in healthcare requires\", 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T03:00:21Z'}",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "summary_agent",
            "summary.topic": "artificial intelligence in healthcare",
            "summary.input_confidence": 0.85,
            "agent.summary_length": 289,
            "agent.output.result": "Executive Summary:\n\nArtificial intelligence (AI) is transforming healthcare with applications in disease diagnosis, treatment, drug discovery, and patient management. Recent advancements in machine learning, natural language processing, and computer vision are enabling AI-based healthcare",
            "agent.output.type": "str"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "2529a9aa-ade6-4099-9c06-0615ac878a3d",
          "trace_id": "b1f5adca-4adb-4e3b-a64b-850a833fe8ef",
          "parent_span_id": "a1f965d4-b17c-4601-9eeb-15a2846e49a4",
          "name": "llm_summary_call",
          "start_time": "2025-09-17 03:00:21.345000000",
          "end_time": "2025-09-17 03:00:22.065000000",
          "duration_ms": 720.6550000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_summary_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_summary_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "anthropic",
            "metadata.model": "claude-3-haiku-20240307",
            "metadata.task": "summarization",
            "llm.prompts": "Create a concise executive summary for research on 'artificial intelligence in healthcare' based on this analysis:\n\nCertainly! Here's a structured analysis of the provided research results on 'artificial intelligence in healthcare':\n\n1. Key Findings:\n   - Artificial intelligence (AI) has significant potential to transform and enhance healthcare, from disease diagnosis and treatment to drug discovery and patient management.\n   - AI-based applications in healthcare are rapidly advancing, with recent developments in areas such as machine learning, natural language processing, and computer vision.\n   - Successful implementation of AI in healthcare requires\n\nProvide a 2-3 sentence executive summary that captures the key insights.",
            "llm.usage.input_tokens": 209,
            "context.agent_id": "summary_agent",
            "llm.task": "summarization",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.completion": "Executive Summary:\n\nArtificial intelligence (AI) is transforming healthcare with applications in disease diagnosis, treatment, drug discovery, and patient management. Recent advancements in machine learning, natural language processing, and computer vision are enabling AI-based healthcare",
            "llm.usage.output_tokens": 72,
            "llm.usage.total_tokens": 281
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 03:00:25.202000000",
      "updated_at": "2025-09-17 03:00:25.202000000"
    },
    {
      "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
      "name": "test_research_workflow_openai_gpt-3.5-turbo",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 03:00:03.972000000",
      "end_time": "2025-09-17 03:00:06.601000000",
      "duration_ms": 2629.083,
      "span_count": 8,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "f987881d-ea22-4efe-946b-ce7906d7ef89",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "af1eeac9-e5b2-45ee-988e-61a57ec614ee",
          "name": "agent:analysis_agent:analysis_agent",
          "start_time": "2025-09-17 03:00:03.972000000",
          "end_time": "2025-09-17 03:00:04.934000000",
          "duration_ms": 961.776,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "analysis_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.analysis_agent",
            "function.type": "agent_operation",
            "agent.id": "analysis_agent",
            "agent.operation": "analysis_agent",
            "agent.type": "analyzer",
            "agent.input.search_results": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "analysis_agent",
            "agent.input_sources": 3,
            "analysis.topic": "artificial intelligence in healthcare",
            "agent.analysis_confidence": 0.85,
            "agent.analysis_length": 615,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '1. Key findings:\\n- The research materials provide detailed insights into the applications and best practices of artificial intelligence in healthcare.\\n- They cover theoretical foundations, real-world examples, and recent advances in the field.\\n- The information is comprehensive and aims to enhance understanding of how AI is transforming healthcare.\\n\\n2. Main themes:\\n- Applications of artificial intelligence in healthcare: The research materials focus on showcasing real-world examples and best practices of AI implementation in healthcare settings.\\n- Recent advances and theoretical foundations: The papers delve', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T03:00:04Z'}",
            "agent.output.type": "dict",
            "agent.reasoning.confidence": "0.85"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "6b5753ba-99fb-4023-8df3-b088adbbb22f",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "1f0d392e-493b-49f4-acb1-7092d062435a",
          "name": "tool:web_search:web_search_tool",
          "start_time": "2025-09-17 03:00:03.972000000",
          "end_time": "2025-09-17 03:00:03.972000000",
          "duration_ms": 0.048,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "web_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "web_search",
            "tool.operation": "web_search_tool",
            "tool.type": "search_engine",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.search_engine": "simulated_google",
            "tool.results_count": 2,
            "tool.avg_relevance": 0.895,
            "tool.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "af1eeac9-e5b2-45ee-988e-61a57ec614ee",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "",
          "name": "agent:research_coordinator:research_coordinator",
          "start_time": "2025-09-17 03:00:03.972000000",
          "end_time": "2025-09-17 03:00:06.601000000",
          "duration_ms": 2628.8559999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "research_coordinator",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.research_coordinator",
            "function.type": "agent_operation",
            "agent.id": "research_coordinator",
            "agent.operation": "research_coordinator",
            "agent.type": "coordinator",
            "agent.input.research_topic": "artificial intelligence in healthcare",
            "context.agent_id": "research_coordinator",
            "research.topic": "artificial intelligence in healthcare",
            "agent.workflow": "multi_agent_research",
            "agent.completed_steps": 3,
            "research.result_size": 2348,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'search_results': [{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}], 'analysis': {'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '1. Key findings:\\n- The research materials provide detailed insights into the applications and best practices of artificial intelligence in healthcare.\\n- They cover theoretical foundations, real-world examples, and recent advances in the field.\\n- The information is comprehensive and aims to enhance understanding of how AI is transforming healthcare.\\n\\n2. Main themes:\\n- Applications of artificial intelligence in healthcare: The research materials focus on showcasing real-world examples and best practices of AI implementation in healthcare settings.\\n- Recent advances and theoretical foundations: The papers delve', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T03:00:04Z'}, 'summary': 'This research on artificial intelligence in healthcare offers detailed insights into its applications, best practices, and recent advances. The materials cover theoretical foundations and real-world examples, aiming to enhance understanding of how AI is transforming the healthcare industry. Key themes include showcasing AI applications', 'timestamp': '2025-09-17T03:00:06Z', 'coordinator_agent': 'research_coordinator'}",
            "agent.output.type": "dict"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "23ed7785-c798-479c-9361-41ca17eb06b3",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "1f0d392e-493b-49f4-acb1-7092d062435a",
          "name": "tool:academic_search:academic_search_tool",
          "start_time": "2025-09-17 03:00:03.972000000",
          "end_time": "2025-09-17 03:00:03.972000000",
          "duration_ms": 0.034999999999999996,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "academic_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "academic_search",
            "tool.operation": "academic_search_tool",
            "tool.type": "academic_database",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.database": "simulated_arxiv",
            "tool.papers_found": 1,
            "tool.total_citations": 42,
            "tool.output.result": "[{'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "1f0d392e-493b-49f4-acb1-7092d062435a",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "af1eeac9-e5b2-45ee-988e-61a57ec614ee",
          "name": "agent:search_agent:search_agent",
          "start_time": "2025-09-17 03:00:03.972000000",
          "end_time": "2025-09-17 03:00:03.972000000",
          "duration_ms": 0.277,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "search_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.search_agent",
            "function.type": "agent_operation",
            "agent.id": "search_agent",
            "agent.operation": "search_agent",
            "agent.type": "researcher",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "agent.search_topic": "artificial intelligence in healthcare",
            "agent.results_count": 3,
            "agent.sources": "web,academic",
            "agent.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "agent.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "05ded28c-580e-4982-a645-1eb4693c6d7f",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "f987881d-ea22-4efe-946b-ce7906d7ef89",
          "name": "llm_analysis_call",
          "start_time": "2025-09-17 03:00:03.972000000",
          "end_time": "2025-09-17 03:00:04.934000000",
          "duration_ms": 961.553,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_analysis_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_analysis_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-3.5-turbo",
            "metadata.task": "analysis",
            "llm.prompts": "Analyze the following research results about 'artificial intelligence in healthcare':\n\n- Understanding artificial intelligence in healthcare: A Comprehensive Guide: Learn about artificial intelligence in healthcare with detailed explanations and examples...\n- artificial intelligence in healthcare Best Practices and Applications: Discover the best practices and real-world applications of artificial intelligence in healthcare...\n- Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey: This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...\n\nProvide a structured analysis including:\n1. Key findings (2-3 bullet points)\n2. Main themes (2-3 themes)\n3. Confidence assessment (0.0-1.0)\n\nKeep the response concise and factual.",
            "llm.usage.input_tokens": 246,
            "context.agent_id": "analysis_agent",
            "llm.task": "research_analysis",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.prompt_length": 862,
            "llm.usage.total_tokens": 421,
            "llm.response_length": 615,
            "llm.completion": "1. Key findings:\n- The research materials provide detailed insights into the applications and best practices of artificial intelligence in healthcare.\n- They cover theoretical foundations, real-world examples, and recent advances in the field.\n- The information is comprehensive and aims to enhance understanding of how AI is transforming healthcare.\n\n2. Main themes:\n- Applications of artificial intelligence in healthcare: The research materials focus on showcasing real-world examples and best practices of AI implementation in healthcare settings.\n- Recent advances and theoretical foundations: The papers delve",
            "llm.usage.output_tokens": 175
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "ad46f344-df08-45c2-9d7d-bc32f87a2082",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "af1eeac9-e5b2-45ee-988e-61a57ec614ee",
          "name": "agent:summary_agent:summary_agent",
          "start_time": "2025-09-17 03:00:04.934000000",
          "end_time": "2025-09-17 03:00:06.601000000",
          "duration_ms": 1666.359,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "summary_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.summary_agent",
            "function.type": "agent_operation",
            "agent.id": "summary_agent",
            "agent.operation": "summary_agent",
            "agent.type": "summarizer",
            "agent.input.analysis": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '1. Key findings:\\n- The research materials provide detailed insights into the applications and best practices of artificial intelligence in healthcare.\\n- They cover theoretical foundations, real-world examples, and recent advances in the field.\\n- The information is comprehensive and aims to enhance understanding of how AI is transforming healthcare.\\n\\n2. Main themes:\\n- Applications of artificial intelligence in healthcare: The research materials focus on showcasing real-world examples and best practices of AI implementation in healthcare settings.\\n- Recent advances and theoretical foundations: The papers delve', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T03:00:04Z'}",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "summary_agent",
            "summary.topic": "artificial intelligence in healthcare",
            "summary.input_confidence": 0.85,
            "agent.summary_length": 337,
            "agent.output.result": "This research on artificial intelligence in healthcare offers detailed insights into its applications, best practices, and recent advances. The materials cover theoretical foundations and real-world examples, aiming to enhance understanding of how AI is transforming the healthcare industry. Key themes include showcasing AI applications",
            "agent.output.type": "str"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "449fa909-e66e-4dd0-ac12-fb01457723e9",
          "trace_id": "dbd5fe67-8058-49b5-b1e8-6e9e34e0ad8c",
          "parent_span_id": "ad46f344-df08-45c2-9d7d-bc32f87a2082",
          "name": "llm_summary_call",
          "start_time": "2025-09-17 03:00:04.934000000",
          "end_time": "2025-09-17 03:00:06.600000000",
          "duration_ms": 1666.1589999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_summary_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_summary_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-3.5-turbo",
            "metadata.task": "summarization",
            "llm.prompts": "Create a concise executive summary for research on 'artificial intelligence in healthcare' based on this analysis:\n\n1. Key findings:\n- The research materials provide detailed insights into the applications and best practices of artificial intelligence in healthcare.\n- They cover theoretical foundations, real-world examples, and recent advances in the field.\n- The information is comprehensive and aims to enhance understanding of how AI is transforming healthcare.\n\n2. Main themes:\n- Applications of artificial intelligence in healthcare: The research materials focus on showcasing real-world examples and best practices of AI implementation in healthcare settings.\n- Recent advances and theoretical foundations: The papers delve\n\nProvide a 2-3 sentence executive summary that captures the key insights.",
            "llm.usage.input_tokens": 230,
            "context.agent_id": "summary_agent",
            "llm.task": "summarization",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.completion": "This research on artificial intelligence in healthcare offers detailed insights into its applications, best practices, and recent advances. The materials cover theoretical foundations and real-world examples, aiming to enhance understanding of how AI is transforming the healthcare industry. Key themes include showcasing AI applications",
            "llm.usage.output_tokens": 84,
            "llm.usage.total_tokens": 314
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 03:00:09.730000000",
      "updated_at": "2025-09-17 03:00:09.730000000"
    },
    {
      "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
      "name": "test_research_workflow_openai_gpt-4o-mini",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 02:59:45.655000000",
      "end_time": "2025-09-17 02:59:50.282000000",
      "duration_ms": 4627.1810000000005,
      "span_count": 8,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e62feafa-2b0b-4734-8d6d-f333ff918be2",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "5174e135-8fe2-4c16-9f01-7c8e9c0b05bb",
          "name": "tool:academic_search:academic_search_tool",
          "start_time": "2025-09-17 02:59:45.655000000",
          "end_time": "2025-09-17 02:59:45.655000000",
          "duration_ms": 0.041999999999999996,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "academic_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "academic_search",
            "tool.operation": "academic_search_tool",
            "tool.type": "academic_database",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.database": "simulated_arxiv",
            "tool.papers_found": 1,
            "tool.total_citations": 42,
            "tool.output.result": "[{'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "46f63f24-bb9a-4610-a728-60d63a211d85",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "",
          "name": "agent:research_coordinator:research_coordinator",
          "start_time": "2025-09-17 02:59:45.655000000",
          "end_time": "2025-09-17 02:59:50.282000000",
          "duration_ms": 4626.924,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "research_coordinator",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.research_coordinator",
            "function.type": "agent_operation",
            "agent.id": "research_coordinator",
            "agent.operation": "research_coordinator",
            "agent.type": "coordinator",
            "agent.input.research_topic": "artificial intelligence in healthcare",
            "context.agent_id": "research_coordinator",
            "research.topic": "artificial intelligence in healthcare",
            "agent.workflow": "multi_agent_research",
            "agent.completed_steps": 3,
            "research.result_size": 2341,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'search_results': [{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}], 'analysis': {'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '### Structured Analysis of Research Results on Artificial Intelligence in Healthcare\\n\\n#### 1. Key Findings\\n- **Comprehensive Understanding**: The research highlights the importance of a thorough understanding of artificial intelligence (AI) in healthcare, emphasizing detailed explanations and examples that clarify its role and potential impact.\\n- **Best Practices and Applications**: There is a focus on identifying best practices and real-world applications of AI in healthcare, suggesting that successful implementation is critical for achieving desired outcomes.\\n- **Recent Advances**: The', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T02:59:48Z'}, 'summary': 'This research underscores the critical need for a comprehensive understanding of artificial intelligence (AI) in healthcare, highlighting its potential impact through detailed explanations and real-world applications. It emphasizes the importance of identifying best practices to ensure successful implementation and maximize outcomes, while also noting', 'timestamp': '2025-09-17T02:59:50Z', 'coordinator_agent': 'research_coordinator'}",
            "agent.output.type": "dict"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "5174e135-8fe2-4c16-9f01-7c8e9c0b05bb",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "46f63f24-bb9a-4610-a728-60d63a211d85",
          "name": "agent:search_agent:search_agent",
          "start_time": "2025-09-17 02:59:45.655000000",
          "end_time": "2025-09-17 02:59:45.656000000",
          "duration_ms": 0.303,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "search_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.search_agent",
            "function.type": "agent_operation",
            "agent.id": "search_agent",
            "agent.operation": "search_agent",
            "agent.type": "researcher",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "agent.search_topic": "artificial intelligence in healthcare",
            "agent.results_count": 3,
            "agent.sources": "web,academic",
            "agent.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "agent.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "78103ef1-83f7-4601-87ed-96caa9fb9982",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "5174e135-8fe2-4c16-9f01-7c8e9c0b05bb",
          "name": "tool:web_search:web_search_tool",
          "start_time": "2025-09-17 02:59:45.655000000",
          "end_time": "2025-09-17 02:59:45.655000000",
          "duration_ms": 0.059,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "web_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "web_search",
            "tool.operation": "web_search_tool",
            "tool.type": "search_engine",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.search_engine": "simulated_google",
            "tool.results_count": 2,
            "tool.avg_relevance": 0.895,
            "tool.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "9c2ca024-4dbb-4182-8e54-21943e348025",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "0d12b421-759a-48e0-95cf-9588b51f9102",
          "name": "llm_analysis_call",
          "start_time": "2025-09-17 02:59:45.656000000",
          "end_time": "2025-09-17 02:59:48.263000000",
          "duration_ms": 2607.4449999999997,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_analysis_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_analysis_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "metadata.task": "analysis",
            "llm.prompts": "Analyze the following research results about 'artificial intelligence in healthcare':\n\n- Understanding artificial intelligence in healthcare: A Comprehensive Guide: Learn about artificial intelligence in healthcare with detailed explanations and examples...\n- artificial intelligence in healthcare Best Practices and Applications: Discover the best practices and real-world applications of artificial intelligence in healthcare...\n- Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey: This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...\n\nProvide a structured analysis including:\n1. Key findings (2-3 bullet points)\n2. Main themes (2-3 themes)\n3. Confidence assessment (0.0-1.0)\n\nKeep the response concise and factual.",
            "llm.usage.input_tokens": 246,
            "context.agent_id": "analysis_agent",
            "llm.task": "research_analysis",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.prompt_length": 862,
            "llm.usage.total_tokens": 394,
            "llm.response_length": 594,
            "llm.completion": "### Structured Analysis of Research Results on Artificial Intelligence in Healthcare\n\n#### 1. Key Findings\n- **Comprehensive Understanding**: The research highlights the importance of a thorough understanding of artificial intelligence (AI) in healthcare, emphasizing detailed explanations and examples that clarify its role and potential impact.\n- **Best Practices and Applications**: There is a focus on identifying best practices and real-world applications of AI in healthcare, suggesting that successful implementation is critical for achieving desired outcomes.\n- **Recent Advances**: The",
            "llm.usage.output_tokens": 148
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "0d12b421-759a-48e0-95cf-9588b51f9102",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "46f63f24-bb9a-4610-a728-60d63a211d85",
          "name": "agent:analysis_agent:analysis_agent",
          "start_time": "2025-09-17 02:59:45.656000000",
          "end_time": "2025-09-17 02:59:48.263000000",
          "duration_ms": 2607.701,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "analysis_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.analysis_agent",
            "function.type": "agent_operation",
            "agent.id": "analysis_agent",
            "agent.operation": "analysis_agent",
            "agent.type": "analyzer",
            "agent.input.search_results": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.8381', 'citations': 42, 'source_type': 'academic'}]",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "analysis_agent",
            "agent.input_sources": 3,
            "analysis.topic": "artificial intelligence in healthcare",
            "agent.analysis_confidence": 0.85,
            "agent.analysis_length": 594,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '### Structured Analysis of Research Results on Artificial Intelligence in Healthcare\\n\\n#### 1. Key Findings\\n- **Comprehensive Understanding**: The research highlights the importance of a thorough understanding of artificial intelligence (AI) in healthcare, emphasizing detailed explanations and examples that clarify its role and potential impact.\\n- **Best Practices and Applications**: There is a focus on identifying best practices and real-world applications of AI in healthcare, suggesting that successful implementation is critical for achieving desired outcomes.\\n- **Recent Advances**: The', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T02:59:48Z'}",
            "agent.output.type": "dict",
            "agent.reasoning.confidence": "0.85"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "f9004a00-67f1-444a-ab35-ab2666c561fc",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "46f63f24-bb9a-4610-a728-60d63a211d85",
          "name": "agent:summary_agent:summary_agent",
          "start_time": "2025-09-17 02:59:48.263000000",
          "end_time": "2025-09-17 02:59:50.282000000",
          "duration_ms": 2018.4560000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "summary_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.summary_agent",
            "function.type": "agent_operation",
            "agent.id": "summary_agent",
            "agent.operation": "summary_agent",
            "agent.type": "summarizer",
            "agent.input.analysis": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '### Structured Analysis of Research Results on Artificial Intelligence in Healthcare\\n\\n#### 1. Key Findings\\n- **Comprehensive Understanding**: The research highlights the importance of a thorough understanding of artificial intelligence (AI) in healthcare, emphasizing detailed explanations and examples that clarify its role and potential impact.\\n- **Best Practices and Applications**: There is a focus on identifying best practices and real-world applications of AI in healthcare, suggesting that successful implementation is critical for achieving desired outcomes.\\n- **Recent Advances**: The', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-17T02:59:48Z'}",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "summary_agent",
            "summary.topic": "artificial intelligence in healthcare",
            "summary.input_confidence": 0.85,
            "agent.summary_length": 353,
            "agent.output.result": "This research underscores the critical need for a comprehensive understanding of artificial intelligence (AI) in healthcare, highlighting its potential impact through detailed explanations and real-world applications. It emphasizes the importance of identifying best practices to ensure successful implementation and maximize outcomes, while also noting",
            "agent.output.type": "str"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "3a4c028b-13e3-4d5c-8b28-339078fce98f",
          "trace_id": "aa48ec1d-e486-4072-9615-390588cb705c",
          "parent_span_id": "f9004a00-67f1-444a-ab35-ab2666c561fc",
          "name": "llm_summary_call",
          "start_time": "2025-09-17 02:59:48.264000000",
          "end_time": "2025-09-17 02:59:50.282000000",
          "duration_ms": 2018.2509999999997,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_summary_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_summary_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "metadata.task": "summarization",
            "llm.prompts": "Create a concise executive summary for research on 'artificial intelligence in healthcare' based on this analysis:\n\n### Structured Analysis of Research Results on Artificial Intelligence in Healthcare\n\n#### 1. Key Findings\n- **Comprehensive Understanding**: The research highlights the importance of a thorough understanding of artificial intelligence (AI) in healthcare, emphasizing detailed explanations and examples that clarify its role and potential impact.\n- **Best Practices and Applications**: There is a focus on identifying best practices and real-world applications of AI in healthcare, suggesting that successful implementation is critical for achieving desired outcomes.\n- **Recent Advances**: The\n\nProvide a 2-3 sentence executive summary that captures the key insights.",
            "llm.usage.input_tokens": 224,
            "context.agent_id": "summary_agent",
            "llm.task": "summarization",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.completion": "This research underscores the critical need for a comprehensive understanding of artificial intelligence (AI) in healthcare, highlighting its potential impact through detailed explanations and real-world applications. It emphasizes the importance of identifying best practices to ensure successful implementation and maximize outcomes, while also noting",
            "llm.usage.output_tokens": 88,
            "llm.usage.total_tokens": 312
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 02:59:53.406000000",
      "updated_at": "2025-09-17 02:59:53.406000000"
    },
    {
      "trace_id": "ea9e0d3b-aa82-41c4-bdef-d840ff803d4b",
      "name": "test_openai_function_calling",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 02:59:00.439000000",
      "end_time": "2025-09-17 02:59:02.941000000",
      "duration_ms": 2501.823,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "05a1b828-e59c-4064-b79d-c5a95bf93dca",
          "trace_id": "ea9e0d3b-aa82-41c4-bdef-d840ff803d4b",
          "parent_span_id": "",
          "name": "llm_with_function_calling",
          "start_time": "2025-09-17 02:59:00.439000000",
          "end_time": "2025-09-17 02:59:02.941000000",
          "duration_ms": 2501.5710000000004,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_with_function_calling",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMFunctionCalling.test_openai_function_calling.<locals>.llm_with_function_calling",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "metadata.function_calling": true,
            "llm.has_tool_calls": true,
            "llm.tool_calls_count": 1,
            "llm.total_tokens": 194,
            "llm.completion": "The weather in San Francisco is currently sunny with a temperature of 22\u00b0C. The humidity is at 65%.",
            "llm.usage.output_tokens": 24,
            "llm.usage.total_tokens": 24
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "5298165f-a57a-4fc8-9970-3b9f8eae8dbf",
          "trace_id": "ea9e0d3b-aa82-41c4-bdef-d840ff803d4b",
          "parent_span_id": "05a1b828-e59c-4064-b79d-c5a95bf93dca",
          "name": "tool:get_weather:get_weather",
          "start_time": "2025-09-17 02:59:01.682000000",
          "end_time": "2025-09-17 02:59:01.682000000",
          "duration_ms": 0.07200000000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "get_weather",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "get_weather",
            "tool.operation": "get_weather",
            "tool.type": "api_tool",
            "tool.input.location": "San Francisco, CA",
            "tool.location": "San Francisco, CA",
            "tool.api_call": "weather_service",
            "tool.result": "{\"location\": \"San Francisco, CA\", \"temperature\": 22, \"condition\": \"sunny\", \"humidity\": 65, \"timestamp\": \"2024-01-15T12:00:00Z\"}",
            "tool.success": true,
            "tool.output.result": "{'location': 'San Francisco, CA', 'temperature': 22, 'condition': 'sunny', 'humidity': 65, 'timestamp': '2024-01-15T12:00:00Z'}",
            "tool.output.type": "dict"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 02:59:41.187000000",
      "updated_at": "2025-09-17 02:59:41.187000000"
    },
    {
      "trace_id": "684272f7-183f-4270-a0b2-80b244d1133c",
      "name": "test_llm_anthropic_claude-3-haiku-20240307",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 02:58:51.232000000",
      "end_time": "2025-09-17 02:58:51.756000000",
      "duration_ms": 524.026,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0c533d59-0aeb-4f6e-965e-6164891d7d4e",
          "trace_id": "684272f7-183f-4270-a0b2-80b244d1133c",
          "parent_span_id": "",
          "name": "call_llm",
          "start_time": "2025-09-17 02:58:51.233000000",
          "end_time": "2025-09-17 02:58:51.756000000",
          "duration_ms": 523.7819999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "call_llm",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMBasicScenarios.test_simple_chat_completion.<locals>.call_llm",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "anthropic",
            "metadata.model": "claude-3-haiku-20240307",
            "llm.prompts": "What is the capital of France? Answer in one sentence.",
            "llm.usage.input_tokens": 19,
            "llm.usage.output_tokens": 7,
            "llm.usage.total_tokens": 26,
            "llm.response": "The capital of France is Paris.",
            "llm.model": "claude-3-haiku-20240307",
            "llm.completion": "The capital of France is Paris.",
            "llm.cost.input": 1.9e-05,
            "llm.cost.output": 1.4e-05,
            "llm.cost.total": 3.3e-05,
            "llm.cost.currency": "USD"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 02:58:54.877000000",
      "updated_at": "2025-09-17 02:58:54.877000000"
    },
    {
      "trace_id": "a09edd38-fe27-49ad-8751-771e49d2ad1c",
      "name": "test_llm_openai_gpt-3.5-turbo",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 02:58:10.200000000",
      "end_time": "2025-09-17 02:58:11.524000000",
      "duration_ms": 1324.467,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "80073645-089b-4336-bc72-b104ab424bf8",
          "trace_id": "a09edd38-fe27-49ad-8751-771e49d2ad1c",
          "parent_span_id": "",
          "name": "call_llm",
          "start_time": "2025-09-17 02:58:10.200000000",
          "end_time": "2025-09-17 02:58:11.524000000",
          "duration_ms": 1324.187,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "call_llm",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMBasicScenarios.test_simple_chat_completion.<locals>.call_llm",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-3.5-turbo",
            "llm.prompts": "What is the capital of France? Answer in one sentence.",
            "llm.usage.input_tokens": 19,
            "llm.usage.output_tokens": 7,
            "llm.usage.total_tokens": 26,
            "llm.response": "The capital of France is Paris.",
            "llm.model": "gpt-3.5-turbo",
            "llm.completion": "The capital of France is Paris.",
            "llm.cost.input": 9.5e-06,
            "llm.cost.output": 1.05e-05,
            "llm.cost.total": 2e-05,
            "llm.cost.currency": "USD"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 02:58:49.752000000",
      "updated_at": "2025-09-17 02:58:49.752000000"
    },
    {
      "trace_id": "7a9f8713-1bde-4479-87fd-fcd8d02ad309",
      "name": "test_llm_openai_gpt-4o-mini",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-17 02:57:29.321000000",
      "end_time": "2025-09-17 02:57:30.696000000",
      "duration_ms": 1374.869,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c31cddbf-a559-4e96-a3e6-58b732bff184",
          "trace_id": "7a9f8713-1bde-4479-87fd-fcd8d02ad309",
          "parent_span_id": "",
          "name": "call_llm",
          "start_time": "2025-09-17 02:57:29.321000000",
          "end_time": "2025-09-17 02:57:30.696000000",
          "duration_ms": 1374.55,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "call_llm",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMBasicScenarios.test_simple_chat_completion.<locals>.call_llm",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "llm.prompts": "What is the capital of France? Answer in one sentence.",
            "llm.usage.input_tokens": 19,
            "llm.usage.output_tokens": 7,
            "llm.usage.total_tokens": 26,
            "llm.response": "The capital of France is Paris.",
            "llm.model": "gpt-4o-mini",
            "llm.completion": "The capital of France is Paris.",
            "llm.cost.input": 2.85e-06,
            "llm.cost.output": 4.2e-06,
            "llm.cost.total": 7.05e-06,
            "llm.cost.currency": "USD"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-17 02:58:09.218000000",
      "updated_at": "2025-09-17 02:58:09.218000000"
    },
    {
      "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
      "name": "test_research_workflow_anthropic_claude-3-haiku-20240307",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:59:22.213000000",
      "end_time": "2025-09-16 02:59:23.802000000",
      "duration_ms": 1589.6779999999999,
      "span_count": 8,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a57addf0-e07e-4c91-937e-2aa0389780d4",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "",
          "name": "agent:research_coordinator:research_coordinator",
          "start_time": "2025-09-16 02:59:22.213000000",
          "end_time": "2025-09-16 02:59:23.802000000",
          "duration_ms": 1589.492,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "research_coordinator",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.research_coordinator",
            "function.type": "agent_operation",
            "agent.id": "research_coordinator",
            "agent.operation": "research_coordinator",
            "agent.type": "coordinator",
            "agent.input.research_topic": "artificial intelligence in healthcare",
            "context.agent_id": "research_coordinator",
            "research.topic": "artificial intelligence in healthcare",
            "agent.workflow": "multi_agent_research",
            "agent.completed_steps": 3,
            "research.result_size": 2286,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'search_results': [{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}], 'analysis': {'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': 'Here is a structured analysis of the research results on \"artificial intelligence in healthcare\":\\n\\n1. Key Findings:\\n- Artificial intelligence (AI) is being increasingly adopted in various healthcare applications, including disease diagnosis, drug discovery, patient monitoring, and clinical decision support.\\n- AI techniques such as machine learning, natural language processing, and computer vision are enabling new capabilities in healthcare, leading to improved outcomes and efficiency.\\n- Practical applications of AI in healthcare are accompanied by challenges related to', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:59:23Z'}, 'summary': 'Artificial intelligence (AI) is rapidly transforming healthcare, enabling new capabilities in disease diagnosis, drug discovery, patient monitoring, and clinical decision-making. While AI techniques like machine learning and computer vision are driving improved outcomes and efficiency, the practical implementation', 'timestamp': '2025-09-16T02:59:23Z', 'coordinator_agent': 'research_coordinator'}",
            "agent.output.type": "dict"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "3881e783-f6fd-47ff-ac99-b8135db50607",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "a57addf0-e07e-4c91-937e-2aa0389780d4",
          "name": "agent:search_agent:search_agent",
          "start_time": "2025-09-16 02:59:22.213000000",
          "end_time": "2025-09-16 02:59:22.213000000",
          "duration_ms": 0.29,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "search_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.search_agent",
            "function.type": "agent_operation",
            "agent.id": "search_agent",
            "agent.operation": "search_agent",
            "agent.type": "researcher",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "agent.search_topic": "artificial intelligence in healthcare",
            "agent.results_count": 3,
            "agent.sources": "web,academic",
            "agent.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "agent.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "dd5be82d-ed8b-4913-b7c3-5576abc4ea3b",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "3881e783-f6fd-47ff-ac99-b8135db50607",
          "name": "tool:web_search:web_search_tool",
          "start_time": "2025-09-16 02:59:22.213000000",
          "end_time": "2025-09-16 02:59:22.213000000",
          "duration_ms": 0.061,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "web_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "web_search",
            "tool.operation": "web_search_tool",
            "tool.type": "search_engine",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.search_engine": "simulated_google",
            "tool.results_count": 2,
            "tool.avg_relevance": 0.895,
            "tool.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "f9c1d54c-8f41-4e14-862e-a482bfe129a3",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "b31f3d8c-d0bf-4303-93aa-6a9cf34ee634",
          "name": "llm_analysis_call",
          "start_time": "2025-09-16 02:59:22.213000000",
          "end_time": "2025-09-16 02:59:23.232000000",
          "duration_ms": 1019.108,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_analysis_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_analysis_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "anthropic",
            "metadata.model": "claude-3-haiku-20240307",
            "metadata.task": "analysis",
            "llm.prompts": "Analyze the following research results about 'artificial intelligence in healthcare':\n\n- Understanding artificial intelligence in healthcare: A Comprehensive Guide: Learn about artificial intelligence in healthcare with detailed explanations and examples...\n- artificial intelligence in healthcare Best Practices and Applications: Discover the best practices and real-world applications of artificial intelligence in healthcare...\n- Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey: This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...\n\nProvide a structured analysis including:\n1. Key findings (2-3 bullet points)\n2. Main themes (2-3 themes)\n3. Confidence assessment (0.0-1.0)\n\nKeep the response concise and factual.",
            "llm.usage.input_tokens": 246,
            "context.agent_id": "analysis_agent",
            "llm.task": "research_analysis",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.prompt_length": 862,
            "llm.usage.total_tokens": 389,
            "llm.response_length": 575,
            "llm.completion": "Here is a structured analysis of the research results on \"artificial intelligence in healthcare\":\n\n1. Key Findings:\n- Artificial intelligence (AI) is being increasingly adopted in various healthcare applications, including disease diagnosis, drug discovery, patient monitoring, and clinical decision support.\n- AI techniques such as machine learning, natural language processing, and computer vision are enabling new capabilities in healthcare, leading to improved outcomes and efficiency.\n- Practical applications of AI in healthcare are accompanied by challenges related to",
            "llm.usage.output_tokens": 143
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "b31f3d8c-d0bf-4303-93aa-6a9cf34ee634",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "a57addf0-e07e-4c91-937e-2aa0389780d4",
          "name": "agent:analysis_agent:analysis_agent",
          "start_time": "2025-09-16 02:59:22.213000000",
          "end_time": "2025-09-16 02:59:23.233000000",
          "duration_ms": 1019.3330000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "analysis_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.analysis_agent",
            "function.type": "agent_operation",
            "agent.id": "analysis_agent",
            "agent.operation": "analysis_agent",
            "agent.type": "analyzer",
            "agent.input.search_results": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "analysis_agent",
            "agent.input_sources": 3,
            "analysis.topic": "artificial intelligence in healthcare",
            "agent.analysis_confidence": 0.85,
            "agent.analysis_length": 575,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': 'Here is a structured analysis of the research results on \"artificial intelligence in healthcare\":\\n\\n1. Key Findings:\\n- Artificial intelligence (AI) is being increasingly adopted in various healthcare applications, including disease diagnosis, drug discovery, patient monitoring, and clinical decision support.\\n- AI techniques such as machine learning, natural language processing, and computer vision are enabling new capabilities in healthcare, leading to improved outcomes and efficiency.\\n- Practical applications of AI in healthcare are accompanied by challenges related to', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:59:23Z'}",
            "agent.output.type": "dict",
            "agent.reasoning.confidence": "0.85"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "34f72840-523a-4ed1-b793-87b1e2cb5c15",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "3881e783-f6fd-47ff-ac99-b8135db50607",
          "name": "tool:academic_search:academic_search_tool",
          "start_time": "2025-09-16 02:59:22.213000000",
          "end_time": "2025-09-16 02:59:22.213000000",
          "duration_ms": 0.038,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "academic_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "academic_search",
            "tool.operation": "academic_search_tool",
            "tool.type": "academic_database",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.database": "simulated_arxiv",
            "tool.papers_found": 1,
            "tool.total_citations": 42,
            "tool.output.result": "[{'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "29cc7a4d-8d93-4e55-8a09-13eab0b9d4aa",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "f87a03e2-6079-4e90-9b8e-a59eefdf0e90",
          "name": "llm_summary_call",
          "start_time": "2025-09-16 02:59:23.233000000",
          "end_time": "2025-09-16 02:59:23.802000000",
          "duration_ms": 569.225,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_summary_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_summary_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "anthropic",
            "metadata.model": "claude-3-haiku-20240307",
            "metadata.task": "summarization",
            "llm.prompts": "Create a concise executive summary for research on 'artificial intelligence in healthcare' based on this analysis:\n\nHere is a structured analysis of the research results on \"artificial intelligence in healthcare\":\n\n1. Key Findings:\n- Artificial intelligence (AI) is being increasingly adopted in various healthcare applications, including disease diagnosis, drug discovery, patient monitoring, and clinical decision support.\n- AI techniques such as machine learning, natural language processing, and computer vision are enabling new capabilities in healthcare, leading to improved outcomes and efficiency.\n- Practical applications of AI in healthcare are accompanied by challenges related to\n\nProvide a 2-3 sentence executive summary that captures the key insights.",
            "llm.usage.input_tokens": 218,
            "context.agent_id": "summary_agent",
            "llm.task": "summarization",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.completion": "Artificial intelligence (AI) is rapidly transforming healthcare, enabling new capabilities in disease diagnosis, drug discovery, patient monitoring, and clinical decision-making. While AI techniques like machine learning and computer vision are driving improved outcomes and efficiency, the practical implementation",
            "llm.usage.output_tokens": 78,
            "llm.usage.total_tokens": 296
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "f87a03e2-6079-4e90-9b8e-a59eefdf0e90",
          "trace_id": "e3c31181-77d7-4432-8424-946f6ff254cd",
          "parent_span_id": "a57addf0-e07e-4c91-937e-2aa0389780d4",
          "name": "agent:summary_agent:summary_agent",
          "start_time": "2025-09-16 02:59:23.233000000",
          "end_time": "2025-09-16 02:59:23.802000000",
          "duration_ms": 569.422,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "summary_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.summary_agent",
            "function.type": "agent_operation",
            "agent.id": "summary_agent",
            "agent.operation": "summary_agent",
            "agent.type": "summarizer",
            "agent.input.analysis": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': 'Here is a structured analysis of the research results on \"artificial intelligence in healthcare\":\\n\\n1. Key Findings:\\n- Artificial intelligence (AI) is being increasingly adopted in various healthcare applications, including disease diagnosis, drug discovery, patient monitoring, and clinical decision support.\\n- AI techniques such as machine learning, natural language processing, and computer vision are enabling new capabilities in healthcare, leading to improved outcomes and efficiency.\\n- Practical applications of AI in healthcare are accompanied by challenges related to', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:59:23Z'}",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "summary_agent",
            "summary.topic": "artificial intelligence in healthcare",
            "summary.input_confidence": 0.85,
            "agent.summary_length": 315,
            "agent.output.result": "Artificial intelligence (AI) is rapidly transforming healthcare, enabling new capabilities in disease diagnosis, drug discovery, patient monitoring, and clinical decision-making. While AI techniques like machine learning and computer vision are driving improved outcomes and efficiency, the practical implementation",
            "agent.output.type": "str"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:59:26.888000000",
      "updated_at": "2025-09-16 02:59:26.888000000"
    },
    {
      "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
      "name": "test_research_workflow_openai_gpt-3.5-turbo",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:59:05.409000000",
      "end_time": "2025-09-16 02:59:08.561000000",
      "duration_ms": 3151.775,
      "span_count": 8,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e088c067-6fd1-49c3-9068-9d892342f64e",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "884abcf6-b8bb-41a5-8ea7-bae1410e1ca4",
          "name": "tool:web_search:web_search_tool",
          "start_time": "2025-09-16 02:59:05.409000000",
          "end_time": "2025-09-16 02:59:05.410000000",
          "duration_ms": 0.047,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "web_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "web_search",
            "tool.operation": "web_search_tool",
            "tool.type": "search_engine",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.search_engine": "simulated_google",
            "tool.results_count": 2,
            "tool.avg_relevance": 0.895,
            "tool.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "def6664c-0c24-4b8c-8755-ce6c8bc115b5",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "",
          "name": "agent:research_coordinator:research_coordinator",
          "start_time": "2025-09-16 02:59:05.409000000",
          "end_time": "2025-09-16 02:59:08.561000000",
          "duration_ms": 3151.586,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "research_coordinator",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.research_coordinator",
            "function.type": "agent_operation",
            "agent.id": "research_coordinator",
            "agent.operation": "research_coordinator",
            "agent.type": "coordinator",
            "agent.input.research_topic": "artificial intelligence in healthcare",
            "context.agent_id": "research_coordinator",
            "research.topic": "artificial intelligence in healthcare",
            "agent.workflow": "multi_agent_research",
            "agent.completed_steps": 3,
            "research.result_size": 2322,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'search_results': [{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}], 'analysis': {'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '1. Key findings:\\n- The research materials provide detailed explanations, examples, best practices, and real-world applications of artificial intelligence in healthcare.\\n- They cover recent advances in the field, including theoretical foundations and practical applications.\\n\\n2. Main themes:\\n- Understanding artificial intelligence in healthcare: Focus on providing a comprehensive guide to AI in healthcare, including explanations and examples.\\n- Best practices and applications: Emphasis on showcasing real-world applications and best practices of AI in healthcare.\\n- Recent advances in AI in healthcare', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:59:07Z'}, 'summary': 'This research on artificial intelligence in healthcare offers a comprehensive overview of the field, highlighting recent advances, theoretical foundations, and practical applications. It delves into key themes such as understanding AI in healthcare, showcasing best practices and real-world applications, and exploring the', 'timestamp': '2025-09-16T02:59:08Z', 'coordinator_agent': 'research_coordinator'}",
            "agent.output.type": "dict"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "884abcf6-b8bb-41a5-8ea7-bae1410e1ca4",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "def6664c-0c24-4b8c-8755-ce6c8bc115b5",
          "name": "agent:search_agent:search_agent",
          "start_time": "2025-09-16 02:59:05.409000000",
          "end_time": "2025-09-16 02:59:05.410000000",
          "duration_ms": 0.279,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "search_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.search_agent",
            "function.type": "agent_operation",
            "agent.id": "search_agent",
            "agent.operation": "search_agent",
            "agent.type": "researcher",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "agent.search_topic": "artificial intelligence in healthcare",
            "agent.results_count": 3,
            "agent.sources": "web,academic",
            "agent.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "agent.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "33ded1b6-6efa-4a42-8c77-ec275089e0d1",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "884abcf6-b8bb-41a5-8ea7-bae1410e1ca4",
          "name": "tool:academic_search:academic_search_tool",
          "start_time": "2025-09-16 02:59:05.410000000",
          "end_time": "2025-09-16 02:59:05.410000000",
          "duration_ms": 0.037,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "academic_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "academic_search",
            "tool.operation": "academic_search_tool",
            "tool.type": "academic_database",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.database": "simulated_arxiv",
            "tool.papers_found": 1,
            "tool.total_citations": 42,
            "tool.output.result": "[{'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "5317f503-5e0c-4526-80cf-1875dd0d9f31",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "def6664c-0c24-4b8c-8755-ce6c8bc115b5",
          "name": "agent:analysis_agent:analysis_agent",
          "start_time": "2025-09-16 02:59:05.410000000",
          "end_time": "2025-09-16 02:59:07.365000000",
          "duration_ms": 1955.212,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "analysis_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.analysis_agent",
            "function.type": "agent_operation",
            "agent.id": "analysis_agent",
            "agent.operation": "analysis_agent",
            "agent.type": "analyzer",
            "agent.input.search_results": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "analysis_agent",
            "agent.input_sources": 3,
            "analysis.topic": "artificial intelligence in healthcare",
            "agent.analysis_confidence": 0.85,
            "agent.analysis_length": 604,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '1. Key findings:\\n- The research materials provide detailed explanations, examples, best practices, and real-world applications of artificial intelligence in healthcare.\\n- They cover recent advances in the field, including theoretical foundations and practical applications.\\n\\n2. Main themes:\\n- Understanding artificial intelligence in healthcare: Focus on providing a comprehensive guide to AI in healthcare, including explanations and examples.\\n- Best practices and applications: Emphasis on showcasing real-world applications and best practices of AI in healthcare.\\n- Recent advances in AI in healthcare', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:59:07Z'}",
            "agent.output.type": "dict",
            "agent.reasoning.confidence": "0.85"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "07797e05-530a-4d47-9c31-1cfa53e6e1da",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "5317f503-5e0c-4526-80cf-1875dd0d9f31",
          "name": "llm_analysis_call",
          "start_time": "2025-09-16 02:59:05.410000000",
          "end_time": "2025-09-16 02:59:07.365000000",
          "duration_ms": 1954.969,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_analysis_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_analysis_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-3.5-turbo",
            "metadata.task": "analysis",
            "llm.prompts": "Analyze the following research results about 'artificial intelligence in healthcare':\n\n- Understanding artificial intelligence in healthcare: A Comprehensive Guide: Learn about artificial intelligence in healthcare with detailed explanations and examples...\n- artificial intelligence in healthcare Best Practices and Applications: Discover the best practices and real-world applications of artificial intelligence in healthcare...\n- Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey: This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...\n\nProvide a structured analysis including:\n1. Key findings (2-3 bullet points)\n2. Main themes (2-3 themes)\n3. Confidence assessment (0.0-1.0)\n\nKeep the response concise and factual.",
            "llm.usage.input_tokens": 246,
            "context.agent_id": "analysis_agent",
            "llm.task": "research_analysis",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.prompt_length": 862,
            "llm.usage.total_tokens": 418,
            "llm.response_length": 604,
            "llm.completion": "1. Key findings:\n- The research materials provide detailed explanations, examples, best practices, and real-world applications of artificial intelligence in healthcare.\n- They cover recent advances in the field, including theoretical foundations and practical applications.\n\n2. Main themes:\n- Understanding artificial intelligence in healthcare: Focus on providing a comprehensive guide to AI in healthcare, including explanations and examples.\n- Best practices and applications: Emphasis on showcasing real-world applications and best practices of AI in healthcare.\n- Recent advances in AI in healthcare",
            "llm.usage.output_tokens": 172
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "ca3f9a0d-aa79-451e-ab19-fa2f8f3cc9d1",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "23097f5a-0026-4952-830c-8f7af224373a",
          "name": "llm_summary_call",
          "start_time": "2025-09-16 02:59:07.365000000",
          "end_time": "2025-09-16 02:59:08.561000000",
          "duration_ms": 1195.447,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_summary_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_summary_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-3.5-turbo",
            "metadata.task": "summarization",
            "llm.prompts": "Create a concise executive summary for research on 'artificial intelligence in healthcare' based on this analysis:\n\n1. Key findings:\n- The research materials provide detailed explanations, examples, best practices, and real-world applications of artificial intelligence in healthcare.\n- They cover recent advances in the field, including theoretical foundations and practical applications.\n\n2. Main themes:\n- Understanding artificial intelligence in healthcare: Focus on providing a comprehensive guide to AI in healthcare, including explanations and examples.\n- Best practices and applications: Emphasis on showcasing real-world applications and best practices of AI in healthcare.\n- Recent advances in AI in healthcare\n\nProvide a 2-3 sentence executive summary that captures the key insights.",
            "llm.usage.input_tokens": 226,
            "context.agent_id": "summary_agent",
            "llm.task": "summarization",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.completion": "This research on artificial intelligence in healthcare offers a comprehensive overview of the field, highlighting recent advances, theoretical foundations, and practical applications. It delves into key themes such as understanding AI in healthcare, showcasing best practices and real-world applications, and exploring the",
            "llm.usage.output_tokens": 80,
            "llm.usage.total_tokens": 306
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "23097f5a-0026-4952-830c-8f7af224373a",
          "trace_id": "719d9b70-8d87-4d98-8f89-2d2627e36e84",
          "parent_span_id": "def6664c-0c24-4b8c-8755-ce6c8bc115b5",
          "name": "agent:summary_agent:summary_agent",
          "start_time": "2025-09-16 02:59:07.365000000",
          "end_time": "2025-09-16 02:59:08.561000000",
          "duration_ms": 1195.645,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "summary_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.summary_agent",
            "function.type": "agent_operation",
            "agent.id": "summary_agent",
            "agent.operation": "summary_agent",
            "agent.type": "summarizer",
            "agent.input.analysis": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': '1. Key findings:\\n- The research materials provide detailed explanations, examples, best practices, and real-world applications of artificial intelligence in healthcare.\\n- They cover recent advances in the field, including theoretical foundations and practical applications.\\n\\n2. Main themes:\\n- Understanding artificial intelligence in healthcare: Focus on providing a comprehensive guide to AI in healthcare, including explanations and examples.\\n- Best practices and applications: Emphasis on showcasing real-world applications and best practices of AI in healthcare.\\n- Recent advances in AI in healthcare', 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:59:07Z'}",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "summary_agent",
            "summary.topic": "artificial intelligence in healthcare",
            "summary.input_confidence": 0.85,
            "agent.summary_length": 322,
            "agent.output.result": "This research on artificial intelligence in healthcare offers a comprehensive overview of the field, highlighting recent advances, theoretical foundations, and practical applications. It delves into key themes such as understanding AI in healthcare, showcasing best practices and real-world applications, and exploring the",
            "agent.output.type": "str"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:59:11.646000000",
      "updated_at": "2025-09-16 02:59:11.646000000"
    },
    {
      "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
      "name": "test_research_workflow_openai_gpt-4o-mini",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:58:46.916000000",
      "end_time": "2025-09-16 02:58:51.760000000",
      "duration_ms": 4844.175,
      "span_count": 8,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "995f8478-a0a9-4199-bf1f-aca599637812",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "521a21c4-0430-4120-91c6-c53439be88b2",
          "name": "tool:academic_search:academic_search_tool",
          "start_time": "2025-09-16 02:58:46.916000000",
          "end_time": "2025-09-16 02:58:46.916000000",
          "duration_ms": 0.041999999999999996,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "academic_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "academic_search",
            "tool.operation": "academic_search_tool",
            "tool.type": "academic_database",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.database": "simulated_arxiv",
            "tool.papers_found": 1,
            "tool.total_citations": 42,
            "tool.output.result": "[{'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "efaa5276-d264-4749-8b70-c986e46ad430",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "3533cd95-77f6-4141-8991-fc3abff41c82",
          "name": "llm_analysis_call",
          "start_time": "2025-09-16 02:58:46.916000000",
          "end_time": "2025-09-16 02:58:49.513000000",
          "duration_ms": 2596.993,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_analysis_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_analysis_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "metadata.task": "analysis",
            "llm.prompts": "Analyze the following research results about 'artificial intelligence in healthcare':\n\n- Understanding artificial intelligence in healthcare: A Comprehensive Guide: Learn about artificial intelligence in healthcare with detailed explanations and examples...\n- artificial intelligence in healthcare Best Practices and Applications: Discover the best practices and real-world applications of artificial intelligence in healthcare...\n- Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey: This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...\n\nProvide a structured analysis including:\n1. Key findings (2-3 bullet points)\n2. Main themes (2-3 themes)\n3. Confidence assessment (0.0-1.0)\n\nKeep the response concise and factual.",
            "llm.usage.input_tokens": 246,
            "context.agent_id": "analysis_agent",
            "llm.task": "research_analysis",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.prompt_length": 862,
            "llm.usage.total_tokens": 402,
            "llm.response_length": 626,
            "llm.completion": "### Structured Analysis of Research Results on 'Artificial Intelligence in Healthcare'\n\n#### 1. Key Findings\n- **Comprehensive Understanding**: The research emphasizes the importance of a thorough understanding of AI in healthcare, highlighting detailed explanations and examples that illustrate its potential impact on patient care and operational efficiency.\n- **Best Practices and Applications**: The findings indicate that there are established best practices in implementing AI technologies, along with successful real-world applications that demonstrate the effectiveness of AI in various healthcare settings.\n- **Recent",
            "llm.usage.output_tokens": 156
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "521a21c4-0430-4120-91c6-c53439be88b2",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "5abda47a-831b-439c-86fe-8049b94b3cda",
          "name": "agent:search_agent:search_agent",
          "start_time": "2025-09-16 02:58:46.916000000",
          "end_time": "2025-09-16 02:58:46.916000000",
          "duration_ms": 0.31,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "search_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.search_agent",
            "function.type": "agent_operation",
            "agent.id": "search_agent",
            "agent.operation": "search_agent",
            "agent.type": "researcher",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "agent.search_topic": "artificial intelligence in healthcare",
            "agent.results_count": 3,
            "agent.sources": "web,academic",
            "agent.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "agent.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "5abda47a-831b-439c-86fe-8049b94b3cda",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "",
          "name": "agent:research_coordinator:research_coordinator",
          "start_time": "2025-09-16 02:58:46.916000000",
          "end_time": "2025-09-16 02:58:51.760000000",
          "duration_ms": 4843.923,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "research_coordinator",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.research_coordinator",
            "function.type": "agent_operation",
            "agent.id": "research_coordinator",
            "agent.operation": "research_coordinator",
            "agent.type": "coordinator",
            "agent.input.research_topic": "artificial intelligence in healthcare",
            "context.agent_id": "research_coordinator",
            "research.topic": "artificial intelligence in healthcare",
            "agent.workflow": "multi_agent_research",
            "agent.completed_steps": 3,
            "research.result_size": 2392,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'search_results': [{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}], 'analysis': {'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': \"### Structured Analysis of Research Results on 'Artificial Intelligence in Healthcare'\\n\\n#### 1. Key Findings\\n- **Comprehensive Understanding**: The research emphasizes the importance of a thorough understanding of AI in healthcare, highlighting detailed explanations and examples that illustrate its potential impact on patient care and operational efficiency.\\n- **Best Practices and Applications**: The findings indicate that there are established best practices in implementing AI technologies, along with successful real-world applications that demonstrate the effectiveness of AI in various healthcare settings.\\n- **Recent\", 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:58:49Z'}, 'summary': 'This research highlights the transformative potential of artificial intelligence in healthcare, underscoring the necessity for a comprehensive understanding of its applications and benefits. It identifies established best practices and showcases successful real-world implementations that enhance patient care and operational efficiency across various healthcare settings.', 'timestamp': '2025-09-16T02:58:51Z', 'coordinator_agent': 'research_coordinator'}",
            "agent.output.type": "dict"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "3aa87549-57b5-40ef-a8e1-042859e3158c",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "521a21c4-0430-4120-91c6-c53439be88b2",
          "name": "tool:web_search:web_search_tool",
          "start_time": "2025-09-16 02:58:46.916000000",
          "end_time": "2025-09-16 02:58:46.916000000",
          "duration_ms": 0.056,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "web_search_tool",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "web_search",
            "tool.operation": "web_search_tool",
            "tool.type": "search_engine",
            "tool.input.query": "artificial intelligence in healthcare",
            "context.agent_id": "search_agent",
            "tool.query": "artificial intelligence in healthcare",
            "tool.search_engine": "simulated_google",
            "tool.results_count": 2,
            "tool.avg_relevance": 0.895,
            "tool.output.result": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}]",
            "tool.output.type": "list"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "3533cd95-77f6-4141-8991-fc3abff41c82",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "5abda47a-831b-439c-86fe-8049b94b3cda",
          "name": "agent:analysis_agent:analysis_agent",
          "start_time": "2025-09-16 02:58:46.916000000",
          "end_time": "2025-09-16 02:58:49.514000000",
          "duration_ms": 2597.232,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "analysis_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.analysis_agent",
            "function.type": "agent_operation",
            "agent.id": "analysis_agent",
            "agent.operation": "analysis_agent",
            "agent.type": "analyzer",
            "agent.input.search_results": "[{'title': 'Understanding artificial intelligence in healthcare: A Comprehensive Guide', 'url': 'https://example.com/artificial-intelligence-in-healthcare', 'snippet': 'Learn about artificial intelligence in healthcare with detailed explanations and examples...', 'relevance_score': 0.92, 'source_type': 'web'}, {'title': 'artificial intelligence in healthcare Best Practices and Applications', 'url': 'https://tech-blog.com/artificial-intelligence-in-healthcare-guide', 'snippet': 'Discover the best practices and real-world applications of artificial intelligence in healthcare...', 'relevance_score': 0.87, 'source_type': 'web'}, {'title': 'Recent Advances in artificial intelligence in healthcare: A Comprehensive Survey', 'authors': ['Dr. Jane Smith', 'Dr. John Doe', 'Dr. Alice Johnson'], 'abstract': 'This paper provides a comprehensive survey of recent advances in artificial intelligence in healthcare, covering theoretical foundations and practical applications...', 'arxiv_id': '2024.2602', 'citations': 42, 'source_type': 'academic'}]",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "analysis_agent",
            "agent.input_sources": 3,
            "analysis.topic": "artificial intelligence in healthcare",
            "agent.analysis_confidence": 0.85,
            "agent.analysis_length": 626,
            "agent.output.result": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': \"### Structured Analysis of Research Results on 'Artificial Intelligence in Healthcare'\\n\\n#### 1. Key Findings\\n- **Comprehensive Understanding**: The research emphasizes the importance of a thorough understanding of AI in healthcare, highlighting detailed explanations and examples that illustrate its potential impact on patient care and operational efficiency.\\n- **Best Practices and Applications**: The findings indicate that there are established best practices in implementing AI technologies, along with successful real-world applications that demonstrate the effectiveness of AI in various healthcare settings.\\n- **Recent\", 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:58:49Z'}",
            "agent.output.type": "dict",
            "agent.reasoning.confidence": "0.85"
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "033f7da9-52ac-420f-9b76-fdfd02cfd2bd",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "db015dc5-d557-4a45-afdb-06586f156804",
          "name": "llm_summary_call",
          "start_time": "2025-09-16 02:58:49.514000000",
          "end_time": "2025-09-16 02:58:51.760000000",
          "duration_ms": 2245.701,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_summary_call",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.llm_summary_call",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "metadata.task": "summarization",
            "llm.prompts": "Create a concise executive summary for research on 'artificial intelligence in healthcare' based on this analysis:\n\n### Structured Analysis of Research Results on 'Artificial Intelligence in Healthcare'\n\n#### 1. Key Findings\n- **Comprehensive Understanding**: The research emphasizes the importance of a thorough understanding of AI in healthcare, highlighting detailed explanations and examples that illustrate its potential impact on patient care and operational efficiency.\n- **Best Practices and Applications**: The findings indicate that there are established best practices in implementing AI technologies, along with successful real-world applications that demonstrate the effectiveness of AI in various healthcare settings.\n- **Recent\n\nProvide a 2-3 sentence executive summary that captures the key insights.",
            "llm.usage.input_tokens": 233,
            "context.agent_id": "summary_agent",
            "llm.task": "summarization",
            "llm.topic": "artificial intelligence in healthcare",
            "llm.completion": "This research highlights the transformative potential of artificial intelligence in healthcare, underscoring the necessity for a comprehensive understanding of its applications and benefits. It identifies established best practices and showcases successful real-world implementations that enhance patient care and operational efficiency across various healthcare settings.",
            "llm.usage.output_tokens": 93,
            "llm.usage.total_tokens": 326
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "db015dc5-d557-4a45-afdb-06586f156804",
          "trace_id": "a43ce36e-7c28-406e-824e-12d21f97b272",
          "parent_span_id": "5abda47a-831b-439c-86fe-8049b94b3cda",
          "name": "agent:summary_agent:summary_agent",
          "start_time": "2025-09-16 02:58:49.514000000",
          "end_time": "2025-09-16 02:58:51.760000000",
          "duration_ms": 2245.908,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "summary_agent",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealAgentScenarios.test_multi_agent_research_workflow.<locals>.summary_agent",
            "function.type": "agent_operation",
            "agent.id": "summary_agent",
            "agent.operation": "summary_agent",
            "agent.type": "summarizer",
            "agent.input.analysis": "{'topic': 'artificial intelligence in healthcare', 'input_sources': 3, 'llm_analysis': \"### Structured Analysis of Research Results on 'Artificial Intelligence in Healthcare'\\n\\n#### 1. Key Findings\\n- **Comprehensive Understanding**: The research emphasizes the importance of a thorough understanding of AI in healthcare, highlighting detailed explanations and examples that illustrate its potential impact on patient care and operational efficiency.\\n- **Best Practices and Applications**: The findings indicate that there are established best practices in implementing AI technologies, along with successful real-world applications that demonstrate the effectiveness of AI in various healthcare settings.\\n- **Recent\", 'confidence_score': 0.85, 'analysis_timestamp': '2025-09-16T02:58:49Z'}",
            "agent.input.topic": "artificial intelligence in healthcare",
            "context.agent_id": "summary_agent",
            "summary.topic": "artificial intelligence in healthcare",
            "summary.input_confidence": 0.85,
            "agent.summary_length": 372,
            "agent.output.result": "This research highlights the transformative potential of artificial intelligence in healthcare, underscoring the necessity for a comprehensive understanding of its applications and benefits. It identifies established best practices and showcases successful real-world implementations that enhance patient care and operational efficiency across various healthcare settings.",
            "agent.output.type": "str"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:58:54.838000000",
      "updated_at": "2025-09-16 02:58:54.838000000"
    },
    {
      "trace_id": "4ffa1340-001b-46f7-b64a-23899c7fe79c",
      "name": "test_openai_function_calling",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:58:31.544000000",
      "end_time": "2025-09-16 02:58:35.631000000",
      "duration_ms": 4087.2580000000003,
      "span_count": 2,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a8632462-6e52-47c4-aecd-8b0c3ddd851b",
          "trace_id": "4ffa1340-001b-46f7-b64a-23899c7fe79c",
          "parent_span_id": "",
          "name": "llm_with_function_calling",
          "start_time": "2025-09-16 02:58:31.544000000",
          "end_time": "2025-09-16 02:58:35.631000000",
          "duration_ms": 4086.9590000000003,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "llm_with_function_calling",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMFunctionCalling.test_openai_function_calling.<locals>.llm_with_function_calling",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "metadata.function_calling": true,
            "llm.has_tool_calls": true,
            "llm.tool_calls_count": 1,
            "llm.total_tokens": 194,
            "llm.completion": "The weather in San Francisco is currently sunny with a temperature of 22\u00b0C. The humidity is at 65%.",
            "llm.usage.output_tokens": 24,
            "llm.usage.total_tokens": 24
          },
          "events": [],
          "links": []
        },
        {
          "span_id": "ec57a72b-30aa-49a0-9f14-61a72567db57",
          "trace_id": "4ffa1340-001b-46f7-b64a-23899c7fe79c",
          "parent_span_id": "a8632462-6e52-47c4-aecd-8b0c3ddd851b",
          "name": "tool:get_weather:get_weather",
          "start_time": "2025-09-16 02:58:32.984000000",
          "end_time": "2025-09-16 02:58:32.984000000",
          "duration_ms": 0.083,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "get_weather",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.type": "tool_call",
            "tool.name": "get_weather",
            "tool.operation": "get_weather",
            "tool.type": "api_tool",
            "tool.input.location": "San Francisco, CA",
            "tool.location": "San Francisco, CA",
            "tool.api_call": "weather_service",
            "tool.result": "{\"location\": \"San Francisco, CA\", \"temperature\": 22, \"condition\": \"sunny\", \"humidity\": 65, \"timestamp\": \"2024-01-15T12:00:00Z\"}",
            "tool.success": true,
            "tool.output.result": "{'location': 'San Francisco, CA', 'temperature': 22, 'condition': 'sunny', 'humidity': 65, 'timestamp': '2024-01-15T12:00:00Z'}",
            "tool.output.type": "dict"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:58:38.874000000",
      "updated_at": "2025-09-16 02:58:38.874000000"
    },
    {
      "trace_id": "e970e93a-5720-4bd4-9887-78fd4d3c0c8f",
      "name": "test_llm_anthropic_claude-3-haiku-20240307",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:58:22.437000000",
      "end_time": "2025-09-16 02:58:22.789000000",
      "duration_ms": 351.591,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "1947d7eb-46d1-4baf-b590-b142aab21fbb",
          "trace_id": "e970e93a-5720-4bd4-9887-78fd4d3c0c8f",
          "parent_span_id": "",
          "name": "call_llm",
          "start_time": "2025-09-16 02:58:22.438000000",
          "end_time": "2025-09-16 02:58:22.789000000",
          "duration_ms": 351.298,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "call_llm",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMBasicScenarios.test_simple_chat_completion.<locals>.call_llm",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "anthropic",
            "metadata.model": "claude-3-haiku-20240307",
            "llm.prompts": "What is the capital of France? Answer in one sentence.",
            "llm.usage.input_tokens": 19,
            "llm.usage.output_tokens": 7,
            "llm.usage.total_tokens": 26,
            "llm.response": "The capital of France is Paris.",
            "llm.model": "claude-3-haiku-20240307",
            "llm.completion": "The capital of France is Paris.",
            "llm.cost.input": 1.9e-05,
            "llm.cost.output": 1.4e-05,
            "llm.cost.total": 3.3e-05,
            "llm.cost.currency": "USD"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:58:25.979000000",
      "updated_at": "2025-09-16 02:58:25.979000000"
    },
    {
      "trace_id": "c47c6d9a-894c-47b3-a48e-1e0a9785a3da",
      "name": "test_llm_openai_gpt-3.5-turbo",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:58:12.646000000",
      "end_time": "2025-09-16 02:58:13.778000000",
      "duration_ms": 1132.097,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a02f06f6-cf0a-4aa2-8b0f-b236a61b2bd2",
          "trace_id": "c47c6d9a-894c-47b3-a48e-1e0a9785a3da",
          "parent_span_id": "",
          "name": "call_llm",
          "start_time": "2025-09-16 02:58:12.646000000",
          "end_time": "2025-09-16 02:58:13.778000000",
          "duration_ms": 1131.8310000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "call_llm",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMBasicScenarios.test_simple_chat_completion.<locals>.call_llm",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-3.5-turbo",
            "llm.prompts": "What is the capital of France? Answer in one sentence.",
            "llm.usage.input_tokens": 19,
            "llm.usage.output_tokens": 7,
            "llm.usage.total_tokens": 26,
            "llm.response": "The capital of France is Paris.",
            "llm.model": "gpt-3.5-turbo",
            "llm.completion": "The capital of France is Paris.",
            "llm.cost.input": 9.5e-06,
            "llm.cost.output": 1.05e-05,
            "llm.cost.total": 2e-05,
            "llm.cost.currency": "USD"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:58:16.901000000",
      "updated_at": "2025-09-16 02:58:16.901000000"
    },
    {
      "trace_id": "e75ebd93-17ba-4b69-aa5e-a201417ca546",
      "name": "test_llm_openai_gpt-4o-mini",
      "project": "noveum-trace-python",
      "environment": "git-integ-test",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-16 02:58:01.457000000",
      "end_time": "2025-09-16 02:58:03.852000000",
      "duration_ms": 2394.522,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "noveum.project": "noveum-trace-python",
        "noveum.environment": "git-integ-test",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "51f1fcb7-afd6-4379-891e-a9e14f9272a2",
          "trace_id": "e75ebd93-17ba-4b69-aa5e-a201417ca546",
          "parent_span_id": "",
          "name": "call_llm",
          "start_time": "2025-09-16 02:58:01.458000000",
          "end_time": "2025-09-16 02:58:03.852000000",
          "duration_ms": 2394.147,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "call_llm",
            "function.module": "tests.integration.end_to_end.test_real_llm_scenarios",
            "function.qualname": "TestRealLLMBasicScenarios.test_simple_chat_completion.<locals>.call_llm",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.provider": "openai",
            "metadata.model": "gpt-4o-mini",
            "llm.prompts": "What is the capital of France? Answer in one sentence.",
            "llm.usage.input_tokens": 19,
            "llm.usage.output_tokens": 7,
            "llm.usage.total_tokens": 26,
            "llm.response": "The capital of France is Paris.",
            "llm.model": "gpt-4o-mini",
            "llm.completion": "The capital of France is Paris.",
            "llm.cost.input": 2.85e-06,
            "llm.cost.output": 4.2e-06,
            "llm.cost.total": 7.05e-06,
            "llm.cost.currency": "USD"
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-16 02:58:07.119000000",
      "updated_at": "2025-09-16 02:58:07.119000000"
    },
    {
      "trace_id": "7da0031d-91e7-4214-83c2-c22a21190c26",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.125000000",
      "end_time": "2025-09-15 10:19:43.126000000",
      "duration_ms": 0.598,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b0e6c057-d2bb-40cd-a31a-051f7655a445",
          "trace_id": "7da0031d-91e7-4214-83c2-c22a21190c26",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.125000000",
          "end_time": "2025-09-15 10:19:43.126000000",
          "duration_ms": 0.462,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_gemini.py\", line 631, in mock_generate_content\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:43.126Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.050000000",
      "updated_at": "2025-09-15 10:19:49.050000000"
    },
    {
      "trace_id": "3a7250bc-2f95-4b49-8978-8e96f8e6f1ef",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.122000000",
      "end_time": "2025-09-15 10:19:43.123000000",
      "duration_ms": 0.554,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "69f225e0-eccf-4dc2-9026-8d664afb3ce2",
          "trace_id": "3a7250bc-2f95-4b49-8978-8e96f8e6f1ef",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.122000000",
          "end_time": "2025-09-15 10:19:43.123000000",
          "duration_ms": 0.44,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.050000000",
      "updated_at": "2025-09-15 10:19:49.050000000"
    },
    {
      "trace_id": "7c661ffb-6085-443c-9e60-b668cc786214",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.119000000",
      "end_time": "2025-09-15 10:19:43.119000000",
      "duration_ms": 0.6,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "7ee0a529-1a00-4eaf-90e3-e4d81e6faeda",
          "trace_id": "7c661ffb-6085-443c-9e60-b668cc786214",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.119000000",
          "end_time": "2025-09-15 10:19:43.119000000",
          "duration_ms": 0.482,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.050000000",
      "updated_at": "2025-09-15 10:19:49.050000000"
    },
    {
      "trace_id": "d88c1ee0-7570-4250-a082-9d48f37cc70a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.116000000",
      "end_time": "2025-09-15 10:19:43.116000000",
      "duration_ms": 0.296,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "f7830db2-eedc-4487-be5a-3eba7cf17e51",
          "trace_id": "d88c1ee0-7570-4250-a082-9d48f37cc70a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.116000000",
          "end_time": "2025-09-15 10:19:43.116000000",
          "duration_ms": 0.182,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "part text",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.050000000",
      "updated_at": "2025-09-15 10:19:49.050000000"
    },
    {
      "trace_id": "49358cf3-d67d-4915-940e-55493869f37b",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.112000000",
      "end_time": "2025-09-15 10:19:43.113000000",
      "duration_ms": 0.256,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "04ad7da3-f5b9-4217-a213-8ee9516d9d17",
          "trace_id": "49358cf3-d67d-4915-940e-55493869f37b",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.112000000",
          "end_time": "2025-09-15 10:19:43.113000000",
          "duration_ms": 0.115,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 50,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.050000000",
      "updated_at": "2025-09-15 10:19:49.050000000"
    },
    {
      "trace_id": "66b051a9-6265-46ab-be59-e205b5bdc284",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.108000000",
      "end_time": "2025-09-15 10:19:43.109000000",
      "duration_ms": 0.22699999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "d3cf794d-3d51-4adb-9336-d36462f1f225",
          "trace_id": "66b051a9-6265-46ab-be59-e205b5bdc284",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.109000000",
          "end_time": "2025-09-15 10:19:43.109000000",
          "duration_ms": 0.104,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "597db539-a750-4e7b-91f8-d9157e4b3bcc",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.105000000",
      "end_time": "2025-09-15 10:19:43.105000000",
      "duration_ms": 0.25999999999999995,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0dc30856-29f6-4bd2-8bc1-141ba06556d3",
          "trace_id": "597db539-a750-4e7b-91f8-d9157e4b3bcc",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.105000000",
          "end_time": "2025-09-15 10:19:43.105000000",
          "duration_ms": 0.115,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 10,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "fallback output",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "0988ea9b-d4d1-4b0c-96c5-2ab3e3c6cad8",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.092000000",
      "end_time": "2025-09-15 10:19:43.092000000",
      "duration_ms": 0.323,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a83bbb56-f790-4bcb-84c0-02c7817fc8f9",
          "trace_id": "0988ea9b-d4d1-4b0c-96c5-2ab3e3c6cad8",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.092000000",
          "end_time": "2025-09-15 10:19:43.092000000",
          "duration_ms": 0.135,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": [
              "<END>"
            ],
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "80abb925-6dbc-4ca9-a3e9-388943a269a2",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.067000000",
      "end_time": "2025-09-15 10:19:43.068000000",
      "duration_ms": 0.47100000000000003,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "55653786-d067-4b1e-8718-f52f5977c99b",
          "trace_id": "80abb925-6dbc-4ca9-a3e9-388943a269a2",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.067000000",
          "end_time": "2025-09-15 10:19:43.068000000",
          "duration_ms": 0.36200000000000004,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 273, in generate_batch\n    result = self.generate(\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:43.068Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "f5bd8adb-bdcb-40bb-9b05-7f21075e22b2",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.066000000",
      "end_time": "2025-09-15 10:19:43.067000000",
      "duration_ms": 0.426,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "03c0bb47-e034-49e2-8ea9-476ab98e87a4",
          "trace_id": "f5bd8adb-bdcb-40bb-9b05-7f21075e22b2",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.066000000",
          "end_time": "2025-09-15 10:19:43.067000000",
          "duration_ms": 0.311,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:43.067Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "a7796221-843d-474e-81cc-c9e4febf682f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.063000000",
      "end_time": "2025-09-15 10:19:43.063000000",
      "duration_ms": 0.203,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "34cd8b34-8abe-4f26-9518-0f549a586892",
          "trace_id": "a7796221-843d-474e-81cc-c9e4febf682f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.063000000",
          "end_time": "2025-09-15 10:19:43.063000000",
          "duration_ms": 0.095,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Prompt 2",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "efe22d65-3c46-49b6-8ada-bcdea6bdd2dc",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.063000000",
      "end_time": "2025-09-15 10:19:43.063000000",
      "duration_ms": 0.204,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "1977a123-0d37-43a2-9163-e17a61d93b2c",
          "trace_id": "efe22d65-3c46-49b6-8ada-bcdea6bdd2dc",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.063000000",
          "end_time": "2025-09-15 10:19:43.063000000",
          "duration_ms": 0.102,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Prompt 3",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "a561e9f3-e7c9-4ae3-af42-d3d891068e6b",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.062000000",
      "end_time": "2025-09-15 10:19:43.062000000",
      "duration_ms": 0.316,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "004afc09-8eb5-4d4d-9e0f-b961d26f6804",
          "trace_id": "a561e9f3-e7c9-4ae3-af42-d3d891068e6b",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.062000000",
          "end_time": "2025-09-15 10:19:43.062000000",
          "duration_ms": 0.14300000000000002,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Prompt 1",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "0057e69d-bbe6-4f78-8871-effcbb4a828b",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.058000000",
      "end_time": "2025-09-15 10:19:43.059000000",
      "duration_ms": 0.624,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "6dccaa6e-1ff0-46bd-8fd1-e4f09e75cda6",
          "trace_id": "0057e69d-bbe6-4f78-8871-effcbb4a828b",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.058000000",
          "end_time": "2025-09-15 10:19:43.059000000",
          "duration_ms": 0.505,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:43.059Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "6ef57b1f-59dd-4a99-8ced-a9d23e598c69",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.055000000",
      "end_time": "2025-09-15 10:19:43.055000000",
      "duration_ms": 0.219,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "95716d11-cf92-4a5f-8178-5a27f68ed16a",
          "trace_id": "6ef57b1f-59dd-4a99-8ced-a9d23e598c69",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.055000000",
          "end_time": "2025-09-15 10:19:43.055000000",
          "duration_ms": 0.102,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "314c412b-ed29-46bf-a0b0-a920f66e672b",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.052000000",
      "end_time": "2025-09-15 10:19:43.052000000",
      "duration_ms": 0.502,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "193df923-b75b-4c9e-a5d0-cffa81b3de8d",
          "trace_id": "314c412b-ed29-46bf-a0b0-a920f66e672b",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.052000000",
          "end_time": "2025-09-15 10:19:43.052000000",
          "duration_ms": 0.309,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.5,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "4ae876ea-dad3-49f4-9540-b23c4427af91",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.048000000",
      "end_time": "2025-09-15 10:19:43.049000000",
      "duration_ms": 0.47100000000000003,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "fd74ce8e-0e87-432f-8525-80e0752a99e0",
          "trace_id": "4ae876ea-dad3-49f4-9540-b23c4427af91",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.048000000",
          "end_time": "2025-09-15 10:19:43.049000000",
          "duration_ms": 0.29100000000000004,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "3ab7b71c-59fc-4bf2-ba09-af0d8afb2e55",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.033000000",
      "end_time": "2025-09-15 10:19:43.033000000",
      "duration_ms": 0.46599999999999997,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "bffc4701-2a98-4b96-a84f-65516238d8d7",
          "trace_id": "3ab7b71c-59fc-4bf2-ba09-af0d8afb2e55",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.033000000",
          "end_time": "2025-09-15 10:19:43.033000000",
          "duration_ms": 0.34900000000000003,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_openai.py\", line 407, in mock_create\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:43.033Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "2d32453d-fa1a-4b46-a0fc-bddd8c2d1590",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.030000000",
      "end_time": "2025-09-15 10:19:43.031000000",
      "duration_ms": 0.5670000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "3c325d10-9bb5-430c-8e4b-db1a808b8b3e",
          "trace_id": "2d32453d-fa1a-4b46-a0fc-bddd8c2d1590",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.030000000",
          "end_time": "2025-09-15 10:19:43.031000000",
          "duration_ms": 0.432,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "49ae21c4-0bec-45ea-a773-3bf4faec97c4",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:43.027000000",
      "end_time": "2025-09-15 10:19:43.028000000",
      "duration_ms": 0.64,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5da0a832-d697-4898-9016-bb961affda9f",
          "trace_id": "49ae21c4-0bec-45ea-a773-3bf4faec97c4",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:43.027000000",
          "end_time": "2025-09-15 10:19:43.028000000",
          "duration_ms": 0.45899999999999996,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "21422ae1-f770-4eff-9fd0-0aa69c683e16",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.713000000",
      "end_time": "2025-09-15 10:19:42.714000000",
      "duration_ms": 1.468,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "9af2024d-eb67-4dae-8c08-d07976c58b93",
          "trace_id": "21422ae1-f770-4eff-9fd0-0aa69c683e16",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.714000000",
          "end_time": "2025-09-15 10:19:42.714000000",
          "duration_ms": 0.628,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 179, in generate_batch\n    result = self.generate(\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.714Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "c5a0a60b-b022-4b79-a420-ed453d5f6eb2",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.708000000",
      "end_time": "2025-09-15 10:19:42.711000000",
      "duration_ms": 2.261,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "bc3d9115-e839-44ef-adfb-b493ff081a82",
          "trace_id": "c5a0a60b-b022-4b79-a420-ed453d5f6eb2",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.709000000",
          "end_time": "2025-09-15 10:19:42.711000000",
          "duration_ms": 1.2260000000000002,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.711Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "a5bd37e2-e2da-4ad3-839c-c11f01df8ada",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.704000000",
      "end_time": "2025-09-15 10:19:42.704000000",
      "duration_ms": 0.187,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "aee5688f-3731-4724-87a2-91e772b831c0",
          "trace_id": "a5bd37e2-e2da-4ad3-839c-c11f01df8ada",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.704000000",
          "end_time": "2025-09-15 10:19:42.704000000",
          "duration_ms": 0.082,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Prompt 3",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "cfd34077-f67f-4dc9-a82c-2561c4a8c1fd",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.703000000",
      "end_time": "2025-09-15 10:19:42.703000000",
      "duration_ms": 0.187,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2bfee0ca-52b7-412c-aed7-a908887c6888",
          "trace_id": "cfd34077-f67f-4dc9-a82c-2561c4a8c1fd",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.703000000",
          "end_time": "2025-09-15 10:19:42.703000000",
          "duration_ms": 0.083,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Prompt 2",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "7d475136-9ced-446e-bc1c-ede0a6ea8333",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.702000000",
      "end_time": "2025-09-15 10:19:42.703000000",
      "duration_ms": 0.207,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e05c6cce-fc36-47c3-84eb-87628af5bf53",
          "trace_id": "7d475136-9ced-446e-bc1c-ede0a6ea8333",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.703000000",
          "end_time": "2025-09-15 10:19:42.703000000",
          "duration_ms": 0.088,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Prompt 1",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "71c363e2-4b86-4162-9813-0038a8b75a39",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.700000000",
      "end_time": "2025-09-15 10:19:42.700000000",
      "duration_ms": 0.517,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "8e80eff1-f590-4bbe-ba7e-9a09bd4dde34",
          "trace_id": "71c363e2-4b86-4162-9813-0038a8b75a39",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.700000000",
          "end_time": "2025-09-15 10:19:42.700000000",
          "duration_ms": 0.4,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.700Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "75bd5df6-6d7a-467b-a819-7deb2e48f181",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.697000000",
      "end_time": "2025-09-15 10:19:42.697000000",
      "duration_ms": 0.236,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b1724f6c-75a7-48ca-9a76-34b5e976b3f9",
          "trace_id": "75bd5df6-6d7a-467b-a819-7deb2e48f181",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.697000000",
          "end_time": "2025-09-15 10:19:42.697000000",
          "duration_ms": 0.097,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.5,
            "llm.stop_sequences": [
              "<END>"
            ],
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "9b697ca9-09d0-496b-8c63-3471d25140da",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.694000000",
      "end_time": "2025-09-15 10:19:42.695000000",
      "duration_ms": 0.27099999999999996,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4b74271b-becb-4dab-a5db-0215c014af5b",
          "trace_id": "9b697ca9-09d0-496b-8c63-3471d25140da",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.694000000",
          "end_time": "2025-09-15 10:19:42.695000000",
          "duration_ms": 0.10500000000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "f846f78f-cde7-4a90-98c9-ce8c081b4148",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.680000000",
      "end_time": "2025-09-15 10:19:42.680000000",
      "duration_ms": 0.49299999999999994,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c6e69959-def8-4002-b76a-f33540175129",
          "trace_id": "f846f78f-cde7-4a90-98c9-ce8c081b4148",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.680000000",
          "end_time": "2025-09-15 10:19:42.680000000",
          "duration_ms": 0.378,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 115, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 112, in _make_request\n    return self.client.messages.create(**params)\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_anthropic.py\", line 495, in mock_create\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.680Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "d5933907-7d04-4129-9276-a63d71615510",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.678000000",
      "end_time": "2025-09-15 10:19:42.678000000",
      "duration_ms": 0.617,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "cb2388bb-9eac-4fcb-aa08-876d557c8f39",
          "trace_id": "d5933907-7d04-4129-9276-a63d71615510",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.678000000",
          "end_time": "2025-09-15 10:19:42.678000000",
          "duration_ms": 0.467,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "0d77eed8-1ebf-4213-a0b4-f83ec676b2b1",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.675000000",
      "end_time": "2025-09-15 10:19:42.675000000",
      "duration_ms": 0.501,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5add359c-c74c-4124-b56c-20bb90fd2dcd",
          "trace_id": "0d77eed8-1ebf-4213-a0b4-f83ec676b2b1",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.675000000",
          "end_time": "2025-09-15 10:19:42.675000000",
          "duration_ms": 0.379,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "809e4bc6-8049-4dee-878f-4f88017221df",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.672000000",
      "end_time": "2025-09-15 10:19:42.672000000",
      "duration_ms": 0.19799999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e33f06f7-6e5a-42bf-8046-f6c0b167e9ea",
          "trace_id": "809e4bc6-8049-4dee-878f-4f88017221df",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.672000000",
          "end_time": "2025-09-15 10:19:42.672000000",
          "duration_ms": 0.083,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "4ed29ddb-cda4-4dc8-8989-fe84d6978923",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.669000000",
      "end_time": "2025-09-15 10:19:42.669000000",
      "duration_ms": 0.398,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "318082be-05a6-4fec-9796-6e5eddca8b33",
          "trace_id": "4ed29ddb-cda4-4dc8-8989-fe84d6978923",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.669000000",
          "end_time": "2025-09-15 10:19:42.669000000",
          "duration_ms": 0.279,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "60966434-1769-43de-963d-73dbf0779227",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.666000000",
      "end_time": "2025-09-15 10:19:42.666000000",
      "duration_ms": 0.462,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "56f4cb18-e9b6-4805-afd7-22a609b37b32",
          "trace_id": "60966434-1769-43de-963d-73dbf0779227",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.666000000",
          "end_time": "2025-09-15 10:19:42.666000000",
          "duration_ms": 0.303,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "1051c5bb-2ce7-4dd9-b977-61262deb0689",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.649000000",
      "end_time": "2025-09-15 10:19:42.649000000",
      "duration_ms": 0.621,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "649df131-06c1-4c43-9bd5-a8c7e49c01fb",
          "trace_id": "1051c5bb-2ce7-4dd9-b977-61262deb0689",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.649000000",
          "end_time": "2025-09-15 10:19:42.649000000",
          "duration_ms": 0.516,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Prompt 2",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 115, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 112, in _make_request\n    return self.client.messages.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1177, in _execute_mock_call\n    raise result\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.649Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "b70542dd-5c17-4e04-ac88-3e9aca2a8b71",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.648000000",
      "end_time": "2025-09-15 10:19:42.648000000",
      "duration_ms": 0.2,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "ae667aab-e079-4431-bed9-13455f90e4a6",
          "trace_id": "b70542dd-5c17-4e04-ac88-3e9aca2a8b71",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.648000000",
          "end_time": "2025-09-15 10:19:42.648000000",
          "duration_ms": 0.085,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Prompt 1",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response 1",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "b845498b-920d-400f-a581-8e2fbf9a7ed5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.644000000",
      "end_time": "2025-09-15 10:19:42.644000000",
      "duration_ms": 0.205,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "31c9a99d-014a-4f55-b7ea-cecc4586adcd",
          "trace_id": "b845498b-920d-400f-a581-8e2fbf9a7ed5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.644000000",
          "end_time": "2025-09-15 10:19:42.644000000",
          "duration_ms": 0.093,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Prompt 2",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response 2",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "c4c58baf-5872-4be4-b819-e3a70ecc3678",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.643000000",
      "end_time": "2025-09-15 10:19:42.644000000",
      "duration_ms": 0.258,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b6e96e93-691a-4367-be05-f45645fcba11",
          "trace_id": "c4c58baf-5872-4be4-b819-e3a70ecc3678",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.644000000",
          "end_time": "2025-09-15 10:19:42.644000000",
          "duration_ms": 0.097,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Prompt 1",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Response 1",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 4
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "b4b075bf-027c-4de1-b756-582fd0609c35",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.639000000",
      "end_time": "2025-09-15 10:19:42.640000000",
      "duration_ms": 1.1329999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "4ba00d6d-9924-4405-aa6b-ea032b9fb225",
          "trace_id": "b4b075bf-027c-4de1-b756-582fd0609c35",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.639000000",
          "end_time": "2025-09-15 10:19:42.640000000",
          "duration_ms": 1.006,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 115, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 112, in _make_request\n    return self.client.messages.create(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.640Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "ddf29160-f60c-469a-86de-e78a632c74b0",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.637000000",
      "end_time": "2025-09-15 10:19:42.637000000",
      "duration_ms": 0.19799999999999998,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "42683804-f032-4b9d-8642-14e1c25be564",
          "trace_id": "ddf29160-f60c-469a-86de-e78a632c74b0",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.637000000",
          "end_time": "2025-09-15 10:19:42.637000000",
          "duration_ms": 0.082,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": "END",
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "69af7776-3063-40e3-8990-158d6994fa71",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.634000000",
      "end_time": "2025-09-15 10:19:42.634000000",
      "duration_ms": 0.222,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0039ad40-14f2-4c22-bf64-80f5658b259e",
          "trace_id": "69af7776-3063-40e3-8990-158d6994fa71",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.634000000",
          "end_time": "2025-09-15 10:19:42.634000000",
          "duration_ms": 0.087,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 500,
            "llm.temperature": 0.7,
            "llm.stop_sequences": [
              "END"
            ],
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "d027f4d9-7f49-4ac0-adbb-e89350598fbf",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.631000000",
      "end_time": "2025-09-15 10:19:42.632000000",
      "duration_ms": 0.289,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "daa9da81-035e-456a-95ee-f8a422695df4",
          "trace_id": "d027f4d9-7f49-4ac0-adbb-e89350598fbf",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.631000000",
          "end_time": "2025-09-15 10:19:42.632000000",
          "duration_ms": 0.11299999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "8442246e-a34e-4001-aaba-c87b70bd2140",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.590000000",
      "end_time": "2025-09-15 10:19:42.590000000",
      "duration_ms": 0.174,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2efd4a65-f68e-4cd2-b5ca-91bdba53efd3",
          "trace_id": "8442246e-a34e-4001-aaba-c87b70bd2140",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.590000000",
          "end_time": "2025-09-15 10:19:42.590000000",
          "duration_ms": 0.039,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "hi",
            "llm.usage.input_tokens": 1,
            "llm.completion": "wrapped",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "bfa1cbae-7484-4248-b63a-60ef279eea9c",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.586000000",
      "end_time": "2025-09-15 10:19:42.586000000",
      "duration_ms": 0.201,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "81312b96-f38c-446c-8ece-fb88417691ac",
          "trace_id": "bfa1cbae-7484-4248-b63a-60ef279eea9c",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.586000000",
          "end_time": "2025-09-15 10:19:42.586000000",
          "duration_ms": 0.045000000000000005,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "hi",
            "llm.usage.input_tokens": 1,
            "llm.completion": "msg",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "537c5b1c-43b9-443a-9b1a-d67af2aa37c8",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.547000000",
      "end_time": "2025-09-15 10:19:42.548000000",
      "duration_ms": 0.536,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "9c4d2004-749d-42a0-8968-1450e365c0b4",
          "trace_id": "537c5b1c-43b9-443a-9b1a-d67af2aa37c8",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.548000000",
          "end_time": "2025-09-15 10:19:42.548000000",
          "duration_ms": 0.363,
          "status": "error",
          "status_message": "Either `prompt` or `messages` must be provided.",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "exception.type": "ValueError",
            "exception.message": "Either `prompt` or `messages` must be provided.",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/azure_openai.py\", line 169, in generate\n    raise ValueError(\"Either `prompt` or `messages` must be provided.\")\nValueError: Either `prompt` or `messages` must be provided.\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Either `prompt` or `messages` must be provided."
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:42.548Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Either `prompt` or `messages` must be provided."
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "5fad821e-b166-47dd-8083-f2686bc7ea17",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.511000000",
      "end_time": "2025-09-15 10:19:42.511000000",
      "duration_ms": 0.297,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "69707b4f-2f6f-4a0c-9a36-433a6a6de3c7",
          "trace_id": "5fad821e-b166-47dd-8083-f2686bc7ea17",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.511000000",
          "end_time": "2025-09-15 10:19:42.511000000",
          "duration_ms": 0.133,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Prompt as chat",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "587e1c06-452b-4eeb-8b32-57735725356b",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:42.507000000",
      "end_time": "2025-09-15 10:19:42.507000000",
      "duration_ms": 0.214,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2972a9f6-68a1-41ca-ac8e-977254d853e8",
          "trace_id": "587e1c06-452b-4eeb-8b32-57735725356b",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:42.507000000",
          "end_time": "2025-09-15 10:19:42.507000000",
          "duration_ms": 0.051,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.azure_openai",
            "function.qualname": "AzureOpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "None",
            "llm.usage.input_tokens": 1,
            "llm.completion": "Delegated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:49.049000000",
      "updated_at": "2025-09-15 10:19:49.049000000"
    },
    {
      "trace_id": "b1c62669-b4e6-40e3-a741-77e2c5052eeb",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.253000000",
      "end_time": "2025-09-15 10:19:17.254000000",
      "duration_ms": 0.7110000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "cc2b483d-68c9-4c0e-a4bd-26e6de8cdee1",
          "trace_id": "b1c62669-b4e6-40e3-a741-77e2c5052eeb",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.253000000",
          "end_time": "2025-09-15 10:19:17.254000000",
          "duration_ms": 0.5569999999999999,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_gemini.py\", line 631, in mock_generate_content\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:17.254Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "2823b007-71d8-46a9-ad6b-f86e035f6943",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.249000000",
      "end_time": "2025-09-15 10:19:17.250000000",
      "duration_ms": 0.735,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "1e5c11ff-ee9a-42e3-b7c5-3651e162f038",
          "trace_id": "2823b007-71d8-46a9-ad6b-f86e035f6943",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.249000000",
          "end_time": "2025-09-15 10:19:17.250000000",
          "duration_ms": 0.5519999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "f11302d3-99b8-4676-8270-352e692ca6f5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.244000000",
      "end_time": "2025-09-15 10:19:17.245000000",
      "duration_ms": 1.1179999999999999,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "ddb29c30-8d2b-4b40-8409-731240dee1e8",
          "trace_id": "f11302d3-99b8-4676-8270-352e692ca6f5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.245000000",
          "end_time": "2025-09-15 10:19:17.245000000",
          "duration_ms": 0.86,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "89eaa776-76a3-46e9-a78c-bc041aa8d492",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.233000000",
      "end_time": "2025-09-15 10:19:17.234000000",
      "duration_ms": 0.876,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a847e193-d679-4f9f-a974-daf2f4f4cbca",
          "trace_id": "89eaa776-76a3-46e9-a78c-bc041aa8d492",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.233000000",
          "end_time": "2025-09-15 10:19:17.234000000",
          "duration_ms": 0.678,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_openai.py\", line 407, in mock_create\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:17.234Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "433d3933-f8ce-4e9c-b5c9-f6773d977ac2",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.227000000",
      "end_time": "2025-09-15 10:19:17.229000000",
      "duration_ms": 1.942,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2c8fc83d-0210-45a0-9ca4-bbb122543bc1",
          "trace_id": "433d3933-f8ce-4e9c-b5c9-f6773d977ac2",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.228000000",
          "end_time": "2025-09-15 10:19:17.229000000",
          "duration_ms": 1.41,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "6e70fa3f-aaf6-4a50-848e-e16bab063d52",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.215000000",
      "end_time": "2025-09-15 10:19:17.218000000",
      "duration_ms": 2.516,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e65ec180-3e4f-4cd5-bc93-efd9d85db7ee",
          "trace_id": "6e70fa3f-aaf6-4a50-848e-e16bab063d52",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.216000000",
          "end_time": "2025-09-15 10:19:17.217000000",
          "duration_ms": 1.9849999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "1ee26c84-d1f6-4867-9c7d-78e29b742dd0",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.186000000",
      "end_time": "2025-09-15 10:19:17.187000000",
      "duration_ms": 0.773,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "34cc1340-3d60-4dd1-876d-d208289762be",
          "trace_id": "1ee26c84-d1f6-4867-9c7d-78e29b742dd0",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.186000000",
          "end_time": "2025-09-15 10:19:17.187000000",
          "duration_ms": 0.629,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 115, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 112, in _make_request\n    return self.client.messages.create(**params)\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_anthropic.py\", line 495, in mock_create\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:19:17.187Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "53da486a-1417-4c61-9496-e2630c2ba472",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.183000000",
      "end_time": "2025-09-15 10:19:17.184000000",
      "duration_ms": 0.651,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "dd5d0109-5bdc-495f-aa82-36386ac7da23",
          "trace_id": "53da486a-1417-4c61-9496-e2630c2ba472",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.183000000",
          "end_time": "2025-09-15 10:19:17.184000000",
          "duration_ms": 0.49700000000000005,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.755000000",
      "updated_at": "2025-09-15 10:19:22.755000000"
    },
    {
      "trace_id": "ccbd8ffc-7008-42b0-b566-71d7e8501b85",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:19:17.180000000",
      "end_time": "2025-09-15 10:19:17.181000000",
      "duration_ms": 0.751,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "fa62b3ce-9cc3-45f9-83dc-f62d4e4e5d32",
          "trace_id": "ccbd8ffc-7008-42b0-b566-71d7e8501b85",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:19:17.180000000",
          "end_time": "2025-09-15 10:19:17.181000000",
          "duration_ms": 0.553,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:19:22.754000000",
      "updated_at": "2025-09-15 10:19:22.754000000"
    },
    {
      "trace_id": "bf69bd7b-1308-4508-bd8d-68b201e1ed87",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:18:47.229000000",
      "end_time": "2025-09-15 10:18:47.230000000",
      "duration_ms": 0.679,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "5ecd8a98-e0fa-4b22-944d-5a34d89762c8",
          "trace_id": "bf69bd7b-1308-4508-bd8d-68b201e1ed87",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:18:47.229000000",
          "end_time": "2025-09-15 10:18:47.230000000",
          "duration_ms": 0.479,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:18:53.662000000",
      "updated_at": "2025-09-15 10:18:53.662000000"
    },
    {
      "trace_id": "a78e453e-7d76-424b-8634-40bcf592f925",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:18:27.659000000",
      "end_time": "2025-09-15 10:18:27.660000000",
      "duration_ms": 0.8450000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "1d4c4986-0f05-4af9-93b9-1c63cb430aec",
          "trace_id": "a78e453e-7d76-424b-8634-40bcf592f925",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:18:27.659000000",
          "end_time": "2025-09-15 10:18:27.660000000",
          "duration_ms": 0.6859999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:18:33.522000000",
      "updated_at": "2025-09-15 10:18:33.522000000"
    },
    {
      "trace_id": "7f3ea458-fce0-480d-bf5f-f9169ddc978c",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:18:01.370000000",
      "end_time": "2025-09-15 10:18:01.371000000",
      "duration_ms": 0.785,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "37c9b618-ede9-4c69-b607-6ea77b224ffd",
          "trace_id": "7f3ea458-fce0-480d-bf5f-f9169ddc978c",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:18:01.370000000",
          "end_time": "2025-09-15 10:18:01.370000000",
          "duration_ms": 0.624,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:18:07.613000000",
      "updated_at": "2025-09-15 10:18:07.613000000"
    },
    {
      "trace_id": "7ec2be6b-5147-4a70-b01e-5c14fc7ab80f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:18:01.345000000",
      "end_time": "2025-09-15 10:18:01.347000000",
      "duration_ms": 1.4809999999999999,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "37cba612-b8a9-4d4a-be3b-b99cf134845f",
          "trace_id": "7ec2be6b-5147-4a70-b01e-5c14fc7ab80f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:18:01.346000000",
          "end_time": "2025-09-15 10:18:01.347000000",
          "duration_ms": 1.292,
          "status": "error",
          "status_message": "unsupported operand type(s) for +=: 'int' and 'Mock'",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "TypeError",
            "exception.message": "unsupported operand type(s) for +=: 'int' and 'Mock'",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 138, in generate\n    self._track_request(\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 250, in _track_request\n    self.total_tokens += tokens_used\nTypeError: unsupported operand type(s) for +=: 'int' and 'Mock'\n",
            "llm.error.type": "TypeError",
            "llm.error.message": "unsupported operand type(s) for +=: 'int' and 'Mock'"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:18:01.347Z",
              "attributes": {
                "exception.type": "TypeError",
                "exception.message": "unsupported operand type(s) for +=: 'int' and 'Mock'"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:18:07.613000000",
      "updated_at": "2025-09-15 10:18:07.613000000"
    },
    {
      "trace_id": "b228d565-734d-4b7c-bcec-87d666a2ed62",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:17:40.565000000",
      "end_time": "2025-09-15 10:17:40.566000000",
      "duration_ms": 0.713,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "3dc15456-e8f7-420f-99e1-1b402a1c2413",
          "trace_id": "b228d565-734d-4b7c-bcec-87d666a2ed62",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:17:40.566000000",
          "end_time": "2025-09-15 10:17:40.566000000",
          "duration_ms": 0.549,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:17:45.791000000",
      "updated_at": "2025-09-15 10:17:45.791000000"
    },
    {
      "trace_id": "2509c0fd-5970-4f1d-867d-c3bfe933d8c7",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.757000000",
      "end_time": "2025-09-15 10:15:18.758000000",
      "duration_ms": 0.447,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c753f3a5-4c42-4fe4-9967-6fe49fbf0c78",
          "trace_id": "2509c0fd-5970-4f1d-867d-c3bfe933d8c7",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.757000000",
          "end_time": "2025-09-15 10:15:18.758000000",
          "duration_ms": 0.294,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 199, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 190, in _make_request\n    return self.client.models.generate_content(\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_gemini.py\", line 631, in mock_generate_content\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.757Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "ce2179d9-da77-414e-b612-e9f7806092e1",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.731000000",
      "end_time": "2025-09-15 10:15:18.732000000",
      "duration_ms": 1.2650000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "64db5ea3-b2b8-4265-bc27-16a890068ac6",
          "trace_id": "ce2179d9-da77-414e-b612-e9f7806092e1",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.731000000",
          "end_time": "2025-09-15 10:15:18.732000000",
          "duration_ms": 1.131,
          "status": "error",
          "status_message": "'str' object has no attribute 'text'",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "AttributeError",
            "exception.message": "'str' object has no attribute 'text'",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/gemini.py\", line 203, in generate\n    if response.text is not None:\nAttributeError: 'str' object has no attribute 'text'\n",
            "llm.error.type": "AttributeError",
            "llm.error.message": "'str' object has no attribute 'text'"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.732Z",
              "attributes": {
                "exception.type": "AttributeError",
                "exception.message": "'str' object has no attribute 'text'"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "757113f2-6021-4cbc-8521-81e213f3369e",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.727000000",
      "end_time": "2025-09-15 10:15:18.728000000",
      "duration_ms": 0.846,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "49b0d294-0cd6-4bd1-9132-60ba0841f128",
          "trace_id": "757113f2-6021-4cbc-8521-81e213f3369e",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.727000000",
          "end_time": "2025-09-15 10:15:18.728000000",
          "duration_ms": 0.6769999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "061cc653-8062-4e67-8366-a146eef1dd39",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.700000000",
      "end_time": "2025-09-15 10:15:18.701000000",
      "duration_ms": 0.6719999999999999,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "e3babb2b-4bde-49af-b3e9-2cb633be4305",
          "trace_id": "061cc653-8062-4e67-8366-a146eef1dd39",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.701000000",
          "end_time": "2025-09-15 10:15:18.701000000",
          "duration_ms": 0.412,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 124, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 121, in _make_request\n    return self.client.chat.completions.create(**params)\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_openai.py\", line 408, in mock_create\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.701Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "0f5f5494-98a9-4e3e-af3b-dfb8bf71da8d",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.678000000",
      "end_time": "2025-09-15 10:15:18.680000000",
      "duration_ms": 2.3640000000000003,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "64d1d1c6-b999-42ef-ab09-1b957df93598",
          "trace_id": "0f5f5494-98a9-4e3e-af3b-dfb8bf71da8d",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.678000000",
          "end_time": "2025-09-15 10:15:18.680000000",
          "duration_ms": 2.206,
          "status": "error",
          "status_message": "'str' object has no attribute 'choices'",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "AttributeError",
            "exception.message": "'str' object has no attribute 'choices'",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 127, in generate\n    generated_text = response.choices[0].message.content\nAttributeError: 'str' object has no attribute 'choices'\n",
            "llm.error.type": "AttributeError",
            "llm.error.message": "'str' object has no attribute 'choices'"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.680Z",
              "attributes": {
                "exception.type": "AttributeError",
                "exception.message": "'str' object has no attribute 'choices'"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "bba77c51-d736-47bf-9523-e86b70be8fcc",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.625000000",
      "end_time": "2025-09-15 10:15:18.626000000",
      "duration_ms": 1.077,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "dcc01fde-95d4-46e6-ba15-0c45d99cc181",
          "trace_id": "bba77c51-d736-47bf-9523-e86b70be8fcc",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.625000000",
          "end_time": "2025-09-15 10:15:18.626000000",
          "duration_ms": 0.9219999999999999,
          "status": "error",
          "status_message": "unsupported operand type(s) for +=: 'int' and 'Mock'",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.openai",
            "function.qualname": "OpenAIModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "openai",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "TypeError",
            "exception.message": "unsupported operand type(s) for +=: 'int' and 'Mock'",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/openai.py\", line 134, in generate\n    self._track_request(\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 250, in _track_request\n    self.total_tokens += tokens_used\nTypeError: unsupported operand type(s) for +=: 'int' and 'Mock'\n",
            "llm.error.type": "TypeError",
            "llm.error.message": "unsupported operand type(s) for +=: 'int' and 'Mock'"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.626Z",
              "attributes": {
                "exception.type": "TypeError",
                "exception.message": "unsupported operand type(s) for +=: 'int' and 'Mock'"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "2ae03acb-2e90-4a0e-abd0-a3b0c56d8790",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.598000000",
      "end_time": "2025-09-15 10:15:18.599000000",
      "duration_ms": 0.6809999999999999,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "2c59d122-053d-4146-a1ca-cac89f04e02d",
          "trace_id": "2ae03acb-2e90-4a0e-abd0-a3b0c56d8790",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.598000000",
          "end_time": "2025-09-15 10:15:18.599000000",
          "duration_ms": 0.481,
          "status": "error",
          "status_message": "Not a rate limit error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "ValueError",
            "exception.message": "Not a rate limit error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 115, in generate\n    response = super()._retry_with_exponential_backoff(_make_request)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/base.py\", line 276, in _retry_with_exponential_backoff\n    return func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 112, in _make_request\n    return self.client.messages.create(**params)\n  File \"/home/shivam/Desktop/noveum/NovaEval/tests/unit/test_models_anthropic.py\", line 495, in mock_create\n    raise ValueError(\"Not a rate limit error\")\nValueError: Not a rate limit error\n",
            "llm.error.type": "ValueError",
            "llm.error.message": "Not a rate limit error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.599Z",
              "attributes": {
                "exception.type": "ValueError",
                "exception.message": "Not a rate limit error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "7139ce5d-8492-4dff-8025-e759d51754e5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.575000000",
      "end_time": "2025-09-15 10:15:18.577000000",
      "duration_ms": 2.477,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a04eacfb-8d69-4d05-8030-3ac059cc48f4",
          "trace_id": "7139ce5d-8492-4dff-8025-e759d51754e5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.575000000",
          "end_time": "2025-09-15 10:15:18.577000000",
          "duration_ms": 2.354,
          "status": "error",
          "status_message": "'str' object has no attribute 'content'",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "AttributeError",
            "exception.message": "'str' object has no attribute 'content'",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/anthropic.py\", line 118, in generate\n    generated_text = response.content[0].text\nAttributeError: 'str' object has no attribute 'content'\n",
            "llm.error.type": "AttributeError",
            "llm.error.message": "'str' object has no attribute 'content'"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T10:15:18.577Z",
              "attributes": {
                "exception.type": "AttributeError",
                "exception.message": "'str' object has no attribute 'content'"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "84686650-8054-4313-ac01-4bf6e117ae53",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:15:18.572000000",
      "end_time": "2025-09-15 10:15:18.573000000",
      "duration_ms": 0.605,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "a562580f-c03f-4d66-bace-b37fbd48039b",
          "trace_id": "84686650-8054-4313-ac01-4bf6e117ae53",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:15:18.572000000",
          "end_time": "2025-09-15 10:15:18.573000000",
          "duration_ms": 0.43600000000000005,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.anthropic",
            "function.qualname": "AnthropicModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "anthropic",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:15:24.153000000",
      "updated_at": "2025-09-15 10:15:24.153000000"
    },
    {
      "trace_id": "74e30adc-3d2c-4e16-a669-e41d4e298a3b",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 10:14:46.915000000",
      "end_time": "2025-09-15 10:14:46.916000000",
      "duration_ms": 0.868,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "59baaa56-d926-462f-b908-ad709262d74c",
          "trace_id": "74e30adc-3d2c-4e16-a669-e41d4e298a3b",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 10:14:46.915000000",
          "end_time": "2025-09-15 10:14:46.916000000",
          "duration_ms": 0.683,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.gemini",
            "function.qualname": "GeminiModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.provider": "google",
            "llm.prompts": "Test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "Test response",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 10:14:51.897000000",
      "updated_at": "2025-09-15 10:14:51.897000000"
    },
    {
      "trace_id": "1fd22f22-f7d9-43d3-bac7-a9c612968d3f",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.256000000",
      "end_time": "2025-09-15 09:59:44.256000000",
      "duration_ms": 0.307,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "8debcb78-62fa-491c-8344-253dcae93fe7",
          "trace_id": "1fd22f22-f7d9-43d3-bac7-a9c612968d3f",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.256000000",
          "end_time": "2025-09-15 09:59:44.256000000",
          "duration_ms": 0.12300000000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": 100,
            "llm.temperature": 0.7,
            "llm.stop_sequences": null,
            "llm.top_p": 0.9,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "6ba2433c-7170-4fd4-867f-4708537b7487",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.249000000",
      "end_time": "2025-09-15 09:59:44.250000000",
      "duration_ms": 0.431,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0b3462a4-987f-404d-937c-d73fd74acb7c",
          "trace_id": "6ba2433c-7170-4fd4-867f-4708537b7487",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.250000000",
          "end_time": "2025-09-15 09:59:44.250000000",
          "duration_ms": 0.14100000000000001,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "5d635b43-aaca-4551-9ea2-aeefe66dd004",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.201000000",
      "end_time": "2025-09-15 09:59:44.202000000",
      "duration_ms": 0.28600000000000003,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "fe061f46-3ecc-41db-916d-c3b23ed335c9",
          "trace_id": "5d635b43-aaca-4551-9ea2-aeefe66dd004",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.202000000",
          "end_time": "2025-09-15 09:59:44.202000000",
          "duration_ms": 0.11699999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "complete response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "0335eeb8-b38f-42b4-a2d2-9627b425f5c5",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.196000000",
      "end_time": "2025-09-15 09:59:44.197000000",
      "duration_ms": 0.36000000000000004,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "76ec3fe3-0892-4652-9689-7938607bda8e",
          "trace_id": "0335eeb8-b38f-42b4-a2d2-9627b425f5c5",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.196000000",
          "end_time": "2025-09-15 09:59:44.197000000",
          "duration_ms": 0.12999999999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "771ef598-4789-42bc-8a49-a9f9acb89427",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.192000000",
      "end_time": "2025-09-15 09:59:44.193000000",
      "duration_ms": 0.318,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "eeb402dd-570d-440d-b0d7-6969b48090af",
          "trace_id": "771ef598-4789-42bc-8a49-a9f9acb89427",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.193000000",
          "end_time": "2025-09-15 09:59:44.193000000",
          "duration_ms": 0.129,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "9148664d-4569-4fed-a807-da2a8489914e",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.189000000",
      "end_time": "2025-09-15 09:59:44.190000000",
      "duration_ms": 0.9600000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "f3809c71-371c-4401-bcb2-20bc2e505d5a",
          "trace_id": "9148664d-4569-4fed-a807-da2a8489914e",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.189000000",
          "end_time": "2025-09-15 09:59:44.190000000",
          "duration_ms": 0.7829999999999999,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "generated response",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "b64a1556-c00c-42f4-be5a-2c9e1d709957",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.178000000",
      "end_time": "2025-09-15 09:59:44.179000000",
      "duration_ms": 0.328,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b6a8e93e-beb2-4ddd-81ac-998237adcf5c",
          "trace_id": "b64a1556-c00c-42f4-be5a-2c9e1d709957",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.179000000",
          "end_time": "2025-09-15 09:59:44.179000000",
          "duration_ms": 0.12999999999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.top_p": 0.9,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "c0f29e4b-fdbe-4229-8d06-0729313d73e2",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.174000000",
      "end_time": "2025-09-15 09:59:44.175000000",
      "duration_ms": 1.06,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "88845c1d-bddb-4a84-9209-24271c3d1f31",
          "trace_id": "c0f29e4b-fdbe-4229-8d06-0729313d73e2",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.174000000",
          "end_time": "2025-09-15 09:59:44.175000000",
          "duration_ms": 0.895,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "content",
            "llm.usage.output_tokens": 1,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "b4869603-df00-4eba-9e7d-bb08a012aab7",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.170000000",
      "end_time": "2025-09-15 09:59:44.170000000",
      "duration_ms": 0.253,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "ab012772-ad66-4551-ae9f-0939a470f617",
          "trace_id": "b4869603-df00-4eba-9e7d-bb08a012aab7",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.170000000",
          "end_time": "2025-09-15 09:59:44.170000000",
          "duration_ms": 0.108,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "mapping content",
            "llm.usage.output_tokens": 3,
            "llm.usage.total_tokens": 5
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "3c149480-bd78-44f4-bf13-144786d12848",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.169000000",
      "end_time": "2025-09-15 09:59:44.169000000",
      "duration_ms": 0.283,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "0c9076e5-a7ee-46f8-b738-b038adea99a7",
          "trace_id": "3c149480-bd78-44f4-bf13-144786d12848",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.169000000",
          "end_time": "2025-09-15 09:59:44.169000000",
          "duration_ms": 0.12999999999999998,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "llm.completion": "attribute content",
            "llm.usage.output_tokens": 4,
            "llm.usage.total_tokens": 6
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "bc3ca25c-6f12-4d49-acdf-d61dac9532d1",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.166000000",
      "end_time": "2025-09-15 09:59:44.166000000",
      "duration_ms": 0.5630000000000001,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "7d1687ca-8832-4d85-9b3c-cd50e06b6103",
          "trace_id": "bc3ca25c-6f12-4d49-acdf-d61dac9532d1",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.166000000",
          "end_time": "2025-09-15 09:59:44.166000000",
          "duration_ms": 0.40499999999999997,
          "status": "error",
          "status_message": "Batch Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "Batch Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 430, in generate_batch\n    text = self.generate(\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: Batch Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "Batch Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:44.166Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "Batch Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "6f0f59e4-840c-4a02-8d1d-ef480e879536",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.165000000",
      "end_time": "2025-09-15 09:59:44.165000000",
      "duration_ms": 0.509,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "ea38f056-ec71-4539-9deb-5fb3357e19e1",
          "trace_id": "6f0f59e4-840c-4a02-8d1d-ef480e879536",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.165000000",
          "end_time": "2025-09-15 09:59:44.165000000",
          "duration_ms": 0.321,
          "status": "error",
          "status_message": "Batch Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt1",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "Batch Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: Batch Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "Batch Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:44.165Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "Batch Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "44885068-7faf-4d20-94b7-85d8340f1103",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.158000000",
      "end_time": "2025-09-15 09:59:44.159000000",
      "duration_ms": 0.629,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "b6f85d8e-df20-4a7e-8399-2327450fa349",
          "trace_id": "44885068-7faf-4d20-94b7-85d8340f1103",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.159000000",
          "end_time": "2025-09-15 09:59:44.159000000",
          "duration_ms": 0.375,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "test prompt",
            "llm.usage.input_tokens": 2,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:44.159Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "c48f2355-5b40-40bc-969d-80163658d593",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.134000000",
      "end_time": "2025-09-15 09:59:44.134000000",
      "duration_ms": 0.23800000000000002,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "79ad5f1d-e394-486d-b2c2-10fdbcc42c7f",
          "trace_id": "c48f2355-5b40-40bc-969d-80163658d593",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.134000000",
          "end_time": "2025-09-15 09:59:44.134000000",
          "duration_ms": 0.101,
          "status": "ok",
          "status_message": "",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt3",
            "llm.usage.input_tokens": 1,
            "llm.completion": "success2",
            "llm.usage.output_tokens": 2,
            "llm.usage.total_tokens": 3
          },
          "events": [],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    },
    {
      "trace_id": "1505bfa5-f0e2-4a6e-b33b-958bc84c279a",
      "name": "auto_trace_generate",
      "project": "novaeval",
      "environment": "dev-shivam",
      "status": "ok",
      "status_message": "",
      "start_time": "2025-09-15 09:59:44.132000000",
      "end_time": "2025-09-15 09:59:44.133000000",
      "duration_ms": 0.896,
      "span_count": 1,
      "error_count": 0,
      "sdk": {
        "name": "noveum-trace-python",
        "version": "0.3.7"
      },
      "attributes": {
        "auto_created": true,
        "function": "generate",
        "type": "llm_call",
        "noveum.project": "novaeval",
        "noveum.environment": "dev-shivam",
        "noveum.sdk.version": "0.3.7",
        "noveum.sampling.decision": "record"
      },
      "metadata": {
        "user_id": null,
        "session_id": null,
        "request_id": null,
        "tags": {},
        "custom_attributes": {}
      },
      "spans": [
        {
          "span_id": "c110bb45-abc5-409f-80d3-d38ab725a415",
          "trace_id": "1505bfa5-f0e2-4a6e-b33b-958bc84c279a",
          "parent_span_id": "",
          "name": "generate",
          "start_time": "2025-09-15 09:59:44.132000000",
          "end_time": "2025-09-15 09:59:44.133000000",
          "duration_ms": 0.749,
          "status": "error",
          "status_message": "API Error",
          "attributes": {
            "function.name": "generate",
            "function.module": "novaeval.models.ollama",
            "function.qualname": "OllamaModel.generate",
            "function.type": "llm_call",
            "llm.operation_type": "completion",
            "llm.max_tokens": null,
            "llm.temperature": null,
            "llm.stop_sequences": null,
            "llm.prompts": "prompt2",
            "llm.usage.input_tokens": 1,
            "exception.type": "Exception",
            "exception.message": "API Error",
            "exception.escaped": false,
            "exception.stacktrace": "Traceback (most recent call last):\n  File \"/home/shivam/Desktop/noveum/noveum-trace/src/noveum_trace/decorators/llm.py\", line 169, in wrapper\n    result = func(*args, **kwargs)\n  File \"/home/shivam/Desktop/noveum/NovaEval/src/novaeval/models/ollama.py\", line 285, in generate\n    response = self.client.chat(**params)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/usr/lib/python3.10/unittest/mock.py\", line 1177, in _execute_mock_call\n    raise result\nException: API Error\n",
            "llm.error.type": "Exception",
            "llm.error.message": "API Error"
          },
          "events": [
            {
              "name": "exception",
              "timestamp": "2025-09-15T09:59:44.133Z",
              "attributes": {
                "exception.type": "Exception",
                "exception.message": "API Error"
              }
            }
          ],
          "links": []
        }
      ],
      "created_at": "2025-09-15 09:59:50.460000000",
      "updated_at": "2025-09-15 09:59:50.460000000"
    }
  ],
  "pagination": {
    "total": 2325,
    "limit": 100,
    "offset": 0,
    "has_more": true
  },
  "timestamp": "2025-09-17T04:13:19.038Z",
  "processing_time_ms": 32
}